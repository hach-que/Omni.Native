Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | COLON expression
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | /* empty */

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace

   21 assignment: DOLLAR VARIABLE EQUALS fragments
   22           | COLON DOLLAR VARIABLE EQUALS fragments
   23           | COLON expression ACCESS expression EQUALS fragments
   24           | COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments

   25 pipeline: instruction
   26         | pipeline PIPE instruction

   27 instruction: command

   28 key_values: key_name
   29           | key_name EQUALS fragment
   30           | key_values COMMA key_name EQUALS fragment
   31           | key_values COMMA key_name

   32 key_name: fragment_or_variable
   33         | QUESTION_MARK

   34 command: arguments

   35 arguments: fragments
   36          | arguments WHITESPACE fragments

   37 fragments: fragment
   38          | fragments fragment
   39          | fragments keyword_as_string

   40 fragment: fragment_or_variable
   41         | number
   42         | MINUS
   43         | PHP
   44         | SINGLE_QUOTED
   45         | DOUBLE_QUOTED
   46         | DOLLAR VARIABLE
   47         | DOLLAR NUMBER
   48         | DOLLAR QUESTION_MARK
   49         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | BEGIN_PAREN expression END_PAREN
   52         | array_decl

   53 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | AT BEGIN_PAREN array_def END_PAREN
   55           | AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

   56 array_def: array_element
   57          | array_def COMMA array_element

   58 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | optional_whitespace fragment optional_whitespace

   60 number: NUMBER

   61 keyword_as_string: KEYWORD_IF
   62                  | KEYWORD_ELSE
   63                  | KEYWORD_WHILE
   64                  | KEYWORD_FOR
   65                  | KEYWORD_FOREACH
   66                  | KEYWORD_DO
   67                  | KEYWORD_BREAK
   68                  | KEYWORD_CONTINUE
   69                  | KEYWORD_AS

   70 fragment_or_variable: FRAGMENT
   71                     | VARIABLE

   72 expression: fragment
   73           | expression ACCESS expression
   74           | expression BEGIN_PAREN END_PAREN
   75           | expression BEGIN_PAREN comma_arguments END_PAREN
   76           | expression DIVIDE expression
   77           | expression MULTIPLY expression
   78           | expression ADD expression
   79           | expression WHITESPACE MINUS expression

   80 comma_arguments: fragments
   81                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 36 79
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 26
PERCENT (263)
DOLLAR (264) 19 20 21 22 46 47 48 49 50
BEGIN_PAREN (265) 49 50 51 53 54 55 74 75
END_PAREN (266) 49 50 51 53 54 55 74 75
EQUALS (267) 21 22 23 24 29 30
BEGIN_SQUARE (268) 24 50
END_SQUARE (269) 24 50
BEGIN_BRACE (270) 13 14 15 16 17
END_BRACE (271) 13 14 15 16 17
COMMA (272) 30 31 55 57 81
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 23 24 73
MAP (278) 19 58
MINUS (279) 42 79
ADD (280) 78
MULTIPLY (281) 77
DIVIDE (282) 76
AT (283) 53 54 55
COLON (284) 12 22 23 24
KEYWORD_WHILE (285) 15 16 63
KEYWORD_DO (286) 16 66
KEYWORD_FOR (287) 64
KEYWORD_FOREACH (288) 17 65
KEYWORD_BREAK (289) 67
KEYWORD_CONTINUE (290) 68
KEYWORD_IF (291) 13 14 61
KEYWORD_ELSE (292) 13 62
KEYWORD_AS (293) 17 69
NUMBER (294) 47 60
FRAGMENT (295) 70
SINGLE_QUOTED (296) 44
DOUBLE_QUOTED (297) 45
VARIABLE (298) 19 20 21 22 46 71
QUESTION_MARK (299) 33 48
PHP (300) 43


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
root (47)
    on left: 1, on right: 0
statements (48)
    on left: 2 3, on right: 1 3 13 14 15 16 17
terminator (49)
    on left: 4 5, on right: 3
optional_whitespace (50)
    on left: 6 7 8, on right: 13 14 15 16 17 19 20 53 55 58 59
statement (51)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 2 3
mapping (52)
    on left: 19 20, on right: 17
assignment (53)
    on left: 21 22 23 24, on right: 11
pipeline (54)
    on left: 25 26, on right: 9 10 26 49 50
instruction (55)
    on left: 27, on right: 25 26
key_values (56)
    on left: 28 29 30 31, on right: 30 31 50
key_name (57)
    on left: 32 33, on right: 28 29 30 31
command (58)
    on left: 34, on right: 27
arguments (59)
    on left: 35 36, on right: 34 36
fragments (60)
    on left: 37 38 39, on right: 21 22 23 24 35 36 38 39 80 81
fragment (61)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52, on right: 13 14
    15 16 17 29 30 37 38 58 59 72
array_decl (62)
    on left: 53 54 55, on right: 52
array_def (63)
    on left: 56 57, on right: 54 55 57
array_element (64)
    on left: 58 59, on right: 56 57
number (65)
    on left: 60, on right: 41
keyword_as_string (66)
    on left: 61 62 63 64 65 66 67 68 69, on right: 39
fragment_or_variable (67)
    on left: 70 71, on right: 32 40
expression (68)
    on left: 72 73 74 75 76 77 78 79, on right: 12 23 24 51 73 74 75
    76 77 78 79
comma_arguments (69)
    on left: 80 81, on right: 75 81


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    root                  go to state 16
    statements            go to state 17
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 1

   21 assignment: DOLLAR . VARIABLE EQUALS fragments
   46 fragment: DOLLAR . VARIABLE
   47         | DOLLAR . NUMBER
   48         | DOLLAR . QUESTION_MARK
   49         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   50         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 32
    QUESTION_MARK  shift, and go to state 33


State 2

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   51         | BEGIN_PAREN . expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 36


State 3

   42 fragment: MINUS .

    $default  reduce using rule 42 (fragment)


State 4

   53 array_decl: AT . BEGIN_PAREN optional_whitespace END_PAREN
   54           | AT . BEGIN_PAREN array_def END_PAREN
   55           | AT . BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

    BEGIN_PAREN  shift, and go to state 37


State 5

   12 statement: COLON . expression
   22 assignment: COLON . DOLLAR VARIABLE EQUALS fragments
   23           | COLON . expression ACCESS expression EQUALS fragments
   24           | COLON . expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 38
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 39


State 6

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 42


State 7

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 43


State 8

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH . optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 44


State 9

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 45


State 10

   60 number: NUMBER .

    $default  reduce using rule 60 (number)


State 11

   70 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 70 (fragment_or_variable)


State 12

   44 fragment: SINGLE_QUOTED .

    $default  reduce using rule 44 (fragment)


State 13

   45 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 45 (fragment)


State 14

   71 fragment_or_variable: VARIABLE .

    $default  reduce using rule 71 (fragment_or_variable)


State 15

   43 fragment: PHP .

    $default  reduce using rule 43 (fragment)


State 16

    0 $accept: root . $end

    $end  shift, and go to state 46


State 17

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 47
    SEMICOLON            shift, and go to state 48

    $default  reduce using rule 1 (root)

    terminator  go to state 49


State 18

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 19

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 20

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   26 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 50
    AMPERSAND  shift, and go to state 51

    $default  reduce using rule 10 (statement)


State 21

   25 pipeline: instruction .

    $default  reduce using rule 25 (pipeline)


State 22

   27 instruction: command .

    $default  reduce using rule 27 (instruction)


State 23

   34 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   36 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 52

    $default  reduce using rule 34 (command)


State 24

   35 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 35 (arguments)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 25

   37 fragments: fragment .

    $default  reduce using rule 37 (fragments)


State 26

   52 fragment: array_decl .

    $default  reduce using rule 52 (fragment)


State 27

   41 fragment: number .

    $default  reduce using rule 41 (fragment)


State 28

   40 fragment: fragment_or_variable .

    $default  reduce using rule 40 (fragment)


State 29

   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   49         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 64
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 30

   28 key_values: . key_name
   29           | . key_name EQUALS fragment
   30           | . key_values COMMA key_name EQUALS fragment
   31           | . key_values COMMA key_name
   32 key_name: . fragment_or_variable
   33         | . QUESTION_MARK
   50 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 65

    key_values            go to state 66
    key_name              go to state 67
    fragment_or_variable  go to state 68


State 31

   47 fragment: DOLLAR NUMBER .

    $default  reduce using rule 47 (fragment)


State 32

   21 assignment: DOLLAR VARIABLE . EQUALS fragments
   46 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, AT, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_AS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 69

    $default  reduce using rule 46 (fragment)


State 33

   48 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 48 (fragment)


State 34

   46 fragment: DOLLAR . VARIABLE
   47         | DOLLAR . NUMBER
   48         | DOLLAR . QUESTION_MARK
   49         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   50         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 70
    QUESTION_MARK  shift, and go to state 33


State 35

   72 expression: fragment .

    $default  reduce using rule 72 (expression)


State 36

   51 fragment: BEGIN_PAREN expression . END_PAREN
   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 71
    BEGIN_PAREN  shift, and go to state 72
    END_PAREN    shift, and go to state 73
    ACCESS       shift, and go to state 74
    ADD          shift, and go to state 75
    MULTIPLY     shift, and go to state 76
    DIVIDE       shift, and go to state 77


State 37

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   53 array_decl: AT BEGIN_PAREN . optional_whitespace END_PAREN
   54           | AT BEGIN_PAREN . array_def END_PAREN
   55           | AT BEGIN_PAREN . array_def COMMA optional_whitespace END_PAREN
   56 array_def: . array_element
   57          | . array_def COMMA array_element
   58 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 78
    array_def            go to state 79
    array_element        go to state 80


State 38

   22 assignment: COLON DOLLAR . VARIABLE EQUALS fragments
   46 fragment: DOLLAR . VARIABLE
   47         | DOLLAR . NUMBER
   48         | DOLLAR . QUESTION_MARK
   49         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   50         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 81
    QUESTION_MARK  shift, and go to state 33


State 39

   12 statement: COLON expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: COLON expression . ACCESS expression EQUALS fragments
   24           | COLON expression . ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 71
    BEGIN_PAREN  shift, and go to state 72
    ACCESS       shift, and go to state 82
    ADD          shift, and go to state 75
    MULTIPLY     shift, and go to state 76
    DIVIDE       shift, and go to state 77

    $default  reduce using rule 12 (statement)


State 40

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 41

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 42

   15 statement: KEYWORD_WHILE optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 83
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 43

   16 statement: KEYWORD_DO optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    BEGIN_BRACE  shift, and go to state 84


State 44

   17 statement: KEYWORD_FOREACH optional_whitespace . fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 85
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 45

   13 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 86
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 46

    0 $accept: root $end .

    $default  accept


State 47

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 48

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 49

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statement             go to state 87
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 50

   26 pipeline: pipeline PIPE . instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    instruction           go to state 88
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 51

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 52

   36 arguments: arguments WHITESPACE . fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 89
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 53

   63 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 63 (keyword_as_string)


State 54

   66 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 66 (keyword_as_string)


State 55

   64 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 64 (keyword_as_string)


State 56

   65 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 65 (keyword_as_string)


State 57

   67 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 67 (keyword_as_string)


State 58

   68 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 68 (keyword_as_string)


State 59

   61 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 61 (keyword_as_string)


State 60

   62 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 62 (keyword_as_string)


State 61

   69 keyword_as_string: KEYWORD_AS .

    $default  reduce using rule 69 (keyword_as_string)


State 62

   38 fragments: fragments fragment .

    $default  reduce using rule 38 (fragments)


State 63

   39 fragments: fragments keyword_as_string .

    $default  reduce using rule 39 (fragments)


State 64

   26 pipeline: pipeline . PIPE instruction
   49 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 50
    END_PAREN  shift, and go to state 90


State 65

   33 key_name: QUESTION_MARK .

    $default  reduce using rule 33 (key_name)


State 66

   30 key_values: key_values . COMMA key_name EQUALS fragment
   31           | key_values . COMMA key_name
   50 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 91
    COMMA       shift, and go to state 92


State 67

   28 key_values: key_name .  [END_SQUARE, COMMA]
   29           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 93

    $default  reduce using rule 28 (key_values)


State 68

   32 key_name: fragment_or_variable .

    $default  reduce using rule 32 (key_name)


State 69

   21 assignment: DOLLAR VARIABLE EQUALS . fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 94
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 70

   46 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 46 (fragment)


State 71

   79 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 95


State 72

   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   74 expression: expression BEGIN_PAREN . END_PAREN
   75           | expression BEGIN_PAREN . comma_arguments END_PAREN
   80 comma_arguments: . fragments
   81                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 96
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 97
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    comma_arguments       go to state 98


State 73

   51 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 51 (fragment)


State 74

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   73           | expression ACCESS . expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 99


State 75

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   78           | expression ADD . expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 100


State 76

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   77           | expression MULTIPLY . expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 101


State 77

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   76           | expression DIVIDE . expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 102


State 78

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   53           | AT BEGIN_PAREN optional_whitespace . END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   58 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | optional_whitespace . fragment optional_whitespace
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 103
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 104
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 79

   54 array_decl: AT BEGIN_PAREN array_def . END_PAREN
   55           | AT BEGIN_PAREN array_def . COMMA optional_whitespace END_PAREN
   57 array_def: array_def . COMMA array_element

    END_PAREN  shift, and go to state 105
    COMMA      shift, and go to state 106


State 80

   56 array_def: array_element .

    $default  reduce using rule 56 (array_def)


State 81

   22 assignment: COLON DOLLAR VARIABLE . EQUALS fragments
   46 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]

    EQUALS  shift, and go to state 107

    $default  reduce using rule 46 (fragment)


State 82

   23 assignment: COLON expression ACCESS . expression EQUALS fragments
   24           | COLON expression ACCESS . BEGIN_SQUARE END_SQUARE EQUALS fragments
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   73           | expression ACCESS . expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    BEGIN_SQUARE   shift, and go to state 108
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 109


State 83

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 110


State 84

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 111
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 85

    6 optional_whitespace: .  [KEYWORD_AS]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment . optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 112


State 86

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 113


State 87

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 88

   26 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 26 (pipeline)


State 89

   36 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 36 (arguments)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 90

   49 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 49 (fragment)


State 91

   50 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 114


State 92

   30 key_values: key_values COMMA . key_name EQUALS fragment
   31           | key_values COMMA . key_name
   32 key_name: . fragment_or_variable
   33         | . QUESTION_MARK
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 65

    key_name              go to state 115
    fragment_or_variable  go to state 68


State 93

   29 key_values: key_name EQUALS . fragment
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 116
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 94

   21 assignment: DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 21 (assignment)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 95

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   72 expression: . fragment
   73           | . expression ACCESS expression
   74           | . expression BEGIN_PAREN END_PAREN
   75           | . expression BEGIN_PAREN comma_arguments END_PAREN
   76           | . expression DIVIDE expression
   77           | . expression MULTIPLY expression
   78           | . expression ADD expression
   79           | . expression WHITESPACE MINUS expression
   79           | expression WHITESPACE MINUS . expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 117


State 96

   74 expression: expression BEGIN_PAREN END_PAREN .

    $default  reduce using rule 74 (expression)


State 97

   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   80 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 80 (comma_arguments)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 98

   75 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   81 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 118
    COMMA      shift, and go to state 119


State 99

   73 expression: expression . ACCESS expression
   73           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 73 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 73 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 73 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 73 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 73 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 100

   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   78           | expression ADD expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]
   79           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 72
    ACCESS       shift, and go to state 74
    MULTIPLY     shift, and go to state 76
    DIVIDE       shift, and go to state 77

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 78 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 78 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 78 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 78 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 78 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 101

   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   77           | expression MULTIPLY expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 72
    ACCESS       shift, and go to state 74

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 77 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 77 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 77 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 77 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 77 and token DIVIDE resolved as reduce (%left DIVIDE).


State 102

   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   76           | expression DIVIDE expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 72
    ACCESS       shift, and go to state 74

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 76 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 76 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 76 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 76 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 76 and token DIVIDE resolved as reduce (%left DIVIDE).


State 103

   53 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN .

    $default  reduce using rule 53 (array_decl)


State 104

    6 optional_whitespace: .  [END_PAREN, COMMA, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   58 array_element: optional_whitespace fragment . optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 120


State 105

   54 array_decl: AT BEGIN_PAREN array_def END_PAREN .

    $default  reduce using rule 54 (array_decl)


State 106

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   55 array_decl: AT BEGIN_PAREN array_def COMMA . optional_whitespace END_PAREN
   57 array_def: array_def COMMA . array_element
   58 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 121
    array_element        go to state 122


State 107

   22 assignment: COLON DOLLAR VARIABLE EQUALS . fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 123
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 108

   24 assignment: COLON expression ACCESS BEGIN_SQUARE . END_SQUARE EQUALS fragments

    END_SQUARE  shift, and go to state 124


State 109

   23 assignment: COLON expression ACCESS expression . EQUALS fragments
   73 expression: expression . ACCESS expression
   73           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression

    EQUALS  shift, and go to state 125

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 73 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 73 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 73 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 73 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 73 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 110

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 126


State 111

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_WHILE optional_whitespace fragment

    TERMINATING_NEWLINE  shift, and go to state 47
    END_BRACE            shift, and go to state 127
    SEMICOLON            shift, and go to state 48

    terminator  go to state 49


State 112

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace . KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    KEYWORD_AS  shift, and go to state 128


State 113

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 129


State 114

   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   50         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 130
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 115

   30 key_values: key_values COMMA key_name . EQUALS fragment
   31           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 131

    $default  reduce using rule 31 (key_values)


State 116

   29 key_values: key_name EQUALS fragment .

    $default  reduce using rule 29 (key_values)


State 117

   73 expression: expression . ACCESS expression
   74           | expression . BEGIN_PAREN END_PAREN
   75           | expression . BEGIN_PAREN comma_arguments END_PAREN
   76           | expression . DIVIDE expression
   77           | expression . MULTIPLY expression
   78           | expression . ADD expression
   79           | expression . WHITESPACE MINUS expression
   79           | expression WHITESPACE MINUS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]

    BEGIN_PAREN  shift, and go to state 72
    ACCESS       shift, and go to state 74
    MULTIPLY     shift, and go to state 76
    DIVIDE       shift, and go to state 77

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 79 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 79 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 79 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 79 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 79 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 118

   75 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 75 (expression)


State 119

   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   81 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 132
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 120

   58 array_element: optional_whitespace fragment optional_whitespace . MAP optional_whitespace fragment optional_whitespace
   59              | optional_whitespace fragment optional_whitespace .  [END_PAREN, COMMA]

    MAP  shift, and go to state 133

    $default  reduce using rule 59 (array_element)


State 121

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   55           | AT BEGIN_PAREN array_def COMMA optional_whitespace . END_PAREN
   58 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   59              | optional_whitespace . fragment optional_whitespace
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 134
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 104
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 122

   57 array_def: array_def COMMA array_element .

    $default  reduce using rule 57 (array_def)


State 123

   22 assignment: COLON DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 22 (assignment)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 124

   24 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE . EQUALS fragments

    EQUALS  shift, and go to state 135


State 125

   23 assignment: COLON expression ACCESS expression EQUALS . fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 136
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 126

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 137
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 127

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_WHILE optional_whitespace fragment

    KEYWORD_WHILE  shift, and go to state 138


State 128

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS . optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 139


State 129

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 140
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 130

   26 pipeline: pipeline . PIPE instruction
   50 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 50
    END_PAREN  shift, and go to state 141


State 131

   30 key_values: key_values COMMA key_name EQUALS . fragment
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 142
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 132

   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE
   81 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 81 (comma_arguments)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 133

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   58 array_element: optional_whitespace fragment optional_whitespace MAP . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 143


State 134

   55 array_decl: AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN .

    $default  reduce using rule 55 (array_decl)


State 135

   24 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS . fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 144
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 136

   23 assignment: COLON expression ACCESS expression EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 23 (assignment)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 137

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 47
    END_BRACE            shift, and go to state 145
    SEMICOLON            shift, and go to state 48

    terminator  go to state 49


State 138

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE . optional_whitespace fragment

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 146


State 139

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace . mapping BEGIN_BRACE statements END_BRACE
   19 mapping: . DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 147

    mapping  go to state 148


State 140

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 47
    END_BRACE            shift, and go to state 149
    SEMICOLON            shift, and go to state 48

    terminator  go to state 49


State 141

   50 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 50 (fragment)


State 142

   30 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 30 (key_values)


State 143

   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   58 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace . fragment optional_whitespace
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 150
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 144

   24 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   38 fragments: fragments . fragment
   39          | fragments . keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   61 keyword_as_string: . KEYWORD_IF
   62                  | . KEYWORD_ELSE
   63                  | . KEYWORD_WHILE
   64                  | . KEYWORD_FOR
   65                  | . KEYWORD_FOREACH
   66                  | . KEYWORD_DO
   67                  | . KEYWORD_BREAK
   68                  | . KEYWORD_CONTINUE
   69                  | . KEYWORD_AS
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 53
    KEYWORD_DO        shift, and go to state 54
    KEYWORD_FOR       shift, and go to state 55
    KEYWORD_FOREACH   shift, and go to state 56
    KEYWORD_BREAK     shift, and go to state 57
    KEYWORD_CONTINUE  shift, and go to state 58
    KEYWORD_IF        shift, and go to state 59
    KEYWORD_ELSE      shift, and go to state 60
    KEYWORD_AS        shift, and go to state 61
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 24 (assignment)

    fragment              go to state 62
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 63
    fragment_or_variable  go to state 28


State 145

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 15 (statement)


State 146

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace . fragment
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 151
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 147

   19 mapping: DOLLAR . VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 152


State 148

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 153


State 149

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 154

    $default  reduce using rule 14 (statement)


State 150

    6 optional_whitespace: .  [END_PAREN, COMMA]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   58 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 155


State 151

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment .

    $default  reduce using rule 16 (statement)


State 152

    6 optional_whitespace: .  [BEGIN_BRACE, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE . optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 156


State 153

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE . statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 157
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 154

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 158


State 155

   58 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace .

    $default  reduce using rule 58 (array_element)


State 156

   19 mapping: DOLLAR VARIABLE optional_whitespace . MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace .  [BEGIN_BRACE]

    MAP  shift, and go to state 159

    $default  reduce using rule 20 (mapping)


State 157

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 47
    END_BRACE            shift, and go to state 160
    SEMICOLON            shift, and go to state 48

    terminator  go to state 49


State 158

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22           | . COLON DOLLAR VARIABLE EQUALS fragments
   23           | . COLON expression ACCESS expression EQUALS fragments
   24           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments
   25 pipeline: . instruction
   26         | . pipeline PIPE instruction
   27 instruction: . command
   34 command: . arguments
   35 arguments: . fragments
   36          | . arguments WHITESPACE fragments
   37 fragments: . fragment
   38          | . fragments fragment
   39          | . fragments keyword_as_string
   40 fragment: . fragment_or_variable
   41         | . number
   42         | . MINUS
   43         | . PHP
   44         | . SINGLE_QUOTED
   45         | . DOUBLE_QUOTED
   46         | . DOLLAR VARIABLE
   47         | . DOLLAR NUMBER
   48         | . DOLLAR QUESTION_MARK
   49         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   50         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   51         | . BEGIN_PAREN expression END_PAREN
   52         | . array_decl
   53 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   54           | . AT BEGIN_PAREN array_def END_PAREN
   55           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 number: . NUMBER
   70 fragment_or_variable: . FRAGMENT
   71                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 161
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 159

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP . optional_whitespace DOLLAR VARIABLE optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 162


State 160

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 17 (statement)


State 161

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 47
    END_BRACE            shift, and go to state 163
    SEMICOLON            shift, and go to state 48

    terminator  go to state 49


State 162

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 164


State 163

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 13 (statement)


State 164

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 165


State 165

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 40
    TERMINATING_NEWLINE  shift, and go to state 41

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 166


State 166

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace .

    $default  reduce using rule 19 (mapping)
