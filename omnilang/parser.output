Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   ERROR
   NUMBER


Grammar

    0 $accept: root $end

    1 root: statement
    2     | root terminator statement

    3 terminator: TERMINATING_NEWLINE
    4           | SEMICOLON

    5 statement: pipeline AMPERSAND
    6          | pipeline
    7          | assignment
    8          | /* empty */

    9 assignment: DOLLAR VARIABLE EQUALS fragments
   10           | DOLLAR VARIABLE EQUALS pipe_call

   11 pipeline: instruction
   12         | pipeline PIPE instruction

   13 instruction: command
   14            | capture
   15            | pipe_call

   16 capture: PERCENT BEGIN_PAREN command END_PAREN
   17        | PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN

   18 key_values: fragment_or_variable EQUALS fragment
   19           | key_values COMMA fragment_or_variable EQUALS fragment

   20 command: arguments

   21 pipe_call: COMMAND_PIPE WHITESPACE arguments
   22          | COMMAND_PIPE

   23 arguments: fragments
   24          | arguments WHITESPACE fragments

   25 fragments: fragment
   26          | fragments fragment

   27 fragment: fragment_or_variable
   28         | SINGLE_QUOTED
   29         | DOUBLE_QUOTED
   30         | DOLLAR VARIABLE
   31         | DOLLAR BEGIN_BRACE expression END_BRACE

   32 fragment_or_variable: FRAGMENT
   33                     | VARIABLE

   34 expression: fragment


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 21 24
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 3
PIPE (262) 12
PERCENT (263) 16 17
DOLLAR (264) 9 10 30 31
BEGIN_PAREN (265) 16 17
END_PAREN (266) 16 17
EQUALS (267) 9 10 18 19
BEGIN_SQUARE (268) 17
END_SQUARE (269) 17
BEGIN_BRACE (270) 31
END_BRACE (271) 31
COMMA (272) 19
COMMAND_PIPE (273) 21 22
SEMICOLON (274) 4
AMPERSAND (275) 5
ERROR (276)
NUMBER (277)
FRAGMENT (278) 32
SINGLE_QUOTED (279) 28
DOUBLE_QUOTED (280) 29
VARIABLE (281) 9 10 30 33


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
root (28)
    on left: 1 2, on right: 0 2
terminator (29)
    on left: 3 4, on right: 2
statement (30)
    on left: 5 6 7 8, on right: 1 2
assignment (31)
    on left: 9 10, on right: 7
pipeline (32)
    on left: 11 12, on right: 5 6 12
instruction (33)
    on left: 13 14 15, on right: 11 12
capture (34)
    on left: 16 17, on right: 14
key_values (35)
    on left: 18 19, on right: 17 19
command (36)
    on left: 20, on right: 13 16 17
pipe_call (37)
    on left: 21 22, on right: 10 15
arguments (38)
    on left: 23 24, on right: 20 21 24
fragments (39)
    on left: 25 26, on right: 9 23 24 26
fragment (40)
    on left: 27 28 29 30 31, on right: 18 19 25 26 34
fragment_or_variable (41)
    on left: 32 33, on right: 18 19 27
expression (42)
    on left: 34, on right: 31


State 0

    0 $accept: . root $end
    1 root: . statement
    2     | . root terminator statement
    5 statement: . pipeline AMPERSAND
    6          | . pipeline
    7          | . assignment
    8          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
    9 assignment: . DOLLAR VARIABLE EQUALS fragments
   10           | . DOLLAR VARIABLE EQUALS pipe_call
   11 pipeline: . instruction
   12         | . pipeline PIPE instruction
   13 instruction: . command
   14            | . capture
   15            | . pipe_call
   16 capture: . PERCENT BEGIN_PAREN command END_PAREN
   17        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   20 command: . arguments
   21 pipe_call: . COMMAND_PIPE WHITESPACE arguments
   22          | . COMMAND_PIPE
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 2
    COMMAND_PIPE   shift, and go to state 3
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    $default  reduce using rule 8 (statement)

    root                  go to state 8
    statement             go to state 9
    assignment            go to state 10
    pipeline              go to state 11
    instruction           go to state 12
    capture               go to state 13
    command               go to state 14
    pipe_call             go to state 15
    arguments             go to state 16
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 1

   16 capture: PERCENT . BEGIN_PAREN command END_PAREN
   17        | PERCENT . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN

    BEGIN_PAREN   shift, and go to state 20
    BEGIN_SQUARE  shift, and go to state 21


State 2

    9 assignment: DOLLAR . VARIABLE EQUALS fragments
   10           | DOLLAR . VARIABLE EQUALS pipe_call
   30 fragment: DOLLAR . VARIABLE
   31         | DOLLAR . BEGIN_BRACE expression END_BRACE

    BEGIN_BRACE  shift, and go to state 22
    VARIABLE     shift, and go to state 23


State 3

   21 pipe_call: COMMAND_PIPE . WHITESPACE arguments
   22          | COMMAND_PIPE .  [$end, TERMINATING_NEWLINE, PIPE, SEMICOLON, AMPERSAND]

    WHITESPACE  shift, and go to state 24

    $default  reduce using rule 22 (pipe_call)


State 4

   32 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 32 (fragment_or_variable)


State 5

   28 fragment: SINGLE_QUOTED .

    $default  reduce using rule 28 (fragment)


State 6

   29 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 29 (fragment)


State 7

   33 fragment_or_variable: VARIABLE .

    $default  reduce using rule 33 (fragment_or_variable)


State 8

    0 $accept: root . $end
    2 root: root . terminator statement
    3 terminator: . TERMINATING_NEWLINE
    4           | . SEMICOLON

    $end                 shift, and go to state 25
    TERMINATING_NEWLINE  shift, and go to state 26
    SEMICOLON            shift, and go to state 27

    terminator  go to state 28


State 9

    1 root: statement .

    $default  reduce using rule 1 (root)


State 10

    7 statement: assignment .

    $default  reduce using rule 7 (statement)


State 11

    5 statement: pipeline . AMPERSAND
    6          | pipeline .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   12 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 29
    AMPERSAND  shift, and go to state 30

    $default  reduce using rule 6 (statement)


State 12

   11 pipeline: instruction .

    $default  reduce using rule 11 (pipeline)


State 13

   14 instruction: capture .

    $default  reduce using rule 14 (instruction)


State 14

   13 instruction: command .

    $default  reduce using rule 13 (instruction)


State 15

   15 instruction: pipe_call .

    $default  reduce using rule 15 (instruction)


State 16

   20 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   24 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 31

    $default  reduce using rule 20 (command)


State 17

   23 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   26 fragments: fragments . fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    $default  reduce using rule 23 (arguments)

    fragment              go to state 33
    fragment_or_variable  go to state 19


State 18

   25 fragments: fragment .

    $default  reduce using rule 25 (fragments)


State 19

   27 fragment: fragment_or_variable .

    $default  reduce using rule 27 (fragment)


State 20

   16 capture: PERCENT BEGIN_PAREN . command END_PAREN
   20 command: . arguments
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    command               go to state 34
    arguments             go to state 16
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 21

   17 capture: PERCENT BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN command END_PAREN
   18 key_values: . fragment_or_variable EQUALS fragment
   19           | . key_values COMMA fragment_or_variable EQUALS fragment
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    FRAGMENT  shift, and go to state 4
    VARIABLE  shift, and go to state 7

    key_values            go to state 35
    fragment_or_variable  go to state 36


State 22

   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   31         | DOLLAR BEGIN_BRACE . expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    fragment              go to state 37
    fragment_or_variable  go to state 19
    expression            go to state 38


State 23

    9 assignment: DOLLAR VARIABLE . EQUALS fragments
   10           | DOLLAR VARIABLE . EQUALS pipe_call
   30 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, SEMICOLON, AMPERSAND, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE]

    EQUALS  shift, and go to state 39

    $default  reduce using rule 30 (fragment)


State 24

   21 pipe_call: COMMAND_PIPE WHITESPACE . arguments
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    arguments             go to state 40
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 25

    0 $accept: root $end .

    $default  accept


State 26

    3 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 3 (terminator)


State 27

    4 terminator: SEMICOLON .

    $default  reduce using rule 4 (terminator)


State 28

    2 root: root terminator . statement
    5 statement: . pipeline AMPERSAND
    6          | . pipeline
    7          | . assignment
    8          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
    9 assignment: . DOLLAR VARIABLE EQUALS fragments
   10           | . DOLLAR VARIABLE EQUALS pipe_call
   11 pipeline: . instruction
   12         | . pipeline PIPE instruction
   13 instruction: . command
   14            | . capture
   15            | . pipe_call
   16 capture: . PERCENT BEGIN_PAREN command END_PAREN
   17        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   20 command: . arguments
   21 pipe_call: . COMMAND_PIPE WHITESPACE arguments
   22          | . COMMAND_PIPE
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 2
    COMMAND_PIPE   shift, and go to state 3
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    $default  reduce using rule 8 (statement)

    statement             go to state 41
    assignment            go to state 10
    pipeline              go to state 11
    instruction           go to state 12
    capture               go to state 13
    command               go to state 14
    pipe_call             go to state 15
    arguments             go to state 16
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 29

   12 pipeline: pipeline PIPE . instruction
   13 instruction: . command
   14            | . capture
   15            | . pipe_call
   16 capture: . PERCENT BEGIN_PAREN command END_PAREN
   17        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   20 command: . arguments
   21 pipe_call: . COMMAND_PIPE WHITESPACE arguments
   22          | . COMMAND_PIPE
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 32
    COMMAND_PIPE   shift, and go to state 3
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    instruction           go to state 42
    capture               go to state 13
    command               go to state 14
    pipe_call             go to state 15
    arguments             go to state 16
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 30

    5 statement: pipeline AMPERSAND .

    $default  reduce using rule 5 (statement)


State 31

   24 arguments: arguments WHITESPACE . fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    fragments             go to state 43
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 32

   30 fragment: DOLLAR . VARIABLE
   31         | DOLLAR . BEGIN_BRACE expression END_BRACE

    BEGIN_BRACE  shift, and go to state 22
    VARIABLE     shift, and go to state 44


State 33

   26 fragments: fragments fragment .

    $default  reduce using rule 26 (fragments)


State 34

   16 capture: PERCENT BEGIN_PAREN command . END_PAREN

    END_PAREN  shift, and go to state 45


State 35

   17 capture: PERCENT BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN command END_PAREN
   19 key_values: key_values . COMMA fragment_or_variable EQUALS fragment

    END_SQUARE  shift, and go to state 46
    COMMA       shift, and go to state 47


State 36

   18 key_values: fragment_or_variable . EQUALS fragment

    EQUALS  shift, and go to state 48


State 37

   34 expression: fragment .

    $default  reduce using rule 34 (expression)


State 38

   31 fragment: DOLLAR BEGIN_BRACE expression . END_BRACE

    END_BRACE  shift, and go to state 49


State 39

    9 assignment: DOLLAR VARIABLE EQUALS . fragments
   10           | DOLLAR VARIABLE EQUALS . pipe_call
   21 pipe_call: . COMMAND_PIPE WHITESPACE arguments
   22          | . COMMAND_PIPE
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    COMMAND_PIPE   shift, and go to state 3
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    pipe_call             go to state 50
    fragments             go to state 51
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 40

   21 pipe_call: COMMAND_PIPE WHITESPACE arguments .  [$end, TERMINATING_NEWLINE, PIPE, SEMICOLON, AMPERSAND]
   24 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 31

    $default  reduce using rule 21 (pipe_call)


State 41

    2 root: root terminator statement .

    $default  reduce using rule 2 (root)


State 42

   12 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 12 (pipeline)


State 43

   24 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   26 fragments: fragments . fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    $default  reduce using rule 24 (arguments)

    fragment              go to state 33
    fragment_or_variable  go to state 19


State 44

   30 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 30 (fragment)


State 45

   16 capture: PERCENT BEGIN_PAREN command END_PAREN .

    $default  reduce using rule 16 (capture)


State 46

   17 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN command END_PAREN

    BEGIN_PAREN  shift, and go to state 52


State 47

   19 key_values: key_values COMMA . fragment_or_variable EQUALS fragment
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    FRAGMENT  shift, and go to state 4
    VARIABLE  shift, and go to state 7

    fragment_or_variable  go to state 53


State 48

   18 key_values: fragment_or_variable EQUALS . fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    fragment              go to state 54
    fragment_or_variable  go to state 19


State 49

   31 fragment: DOLLAR BEGIN_BRACE expression END_BRACE .

    $default  reduce using rule 31 (fragment)


State 50

   10 assignment: DOLLAR VARIABLE EQUALS pipe_call .

    $default  reduce using rule 10 (assignment)


State 51

    9 assignment: DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   26 fragments: fragments . fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    $default  reduce using rule 9 (assignment)

    fragment              go to state 33
    fragment_or_variable  go to state 19


State 52

   17 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . command END_PAREN
   20 command: . arguments
   23 arguments: . fragments
   24          | . arguments WHITESPACE fragments
   25 fragments: . fragment
   26          | . fragments fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    command               go to state 55
    arguments             go to state 16
    fragments             go to state 17
    fragment              go to state 18
    fragment_or_variable  go to state 19


State 53

   19 key_values: key_values COMMA fragment_or_variable . EQUALS fragment

    EQUALS  shift, and go to state 56


State 54

   18 key_values: fragment_or_variable EQUALS fragment .

    $default  reduce using rule 18 (key_values)


State 55

   17 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command . END_PAREN

    END_PAREN  shift, and go to state 57


State 56

   19 key_values: key_values COMMA fragment_or_variable EQUALS . fragment
   27 fragment: . fragment_or_variable
   28         | . SINGLE_QUOTED
   29         | . DOUBLE_QUOTED
   30         | . DOLLAR VARIABLE
   31         | . DOLLAR BEGIN_BRACE expression END_BRACE
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 32
    FRAGMENT       shift, and go to state 4
    SINGLE_QUOTED  shift, and go to state 5
    DOUBLE_QUOTED  shift, and go to state 6
    VARIABLE       shift, and go to state 7

    fragment              go to state 58
    fragment_or_variable  go to state 19


State 57

   17 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN .

    $default  reduce using rule 17 (capture)


State 58

   19 key_values: key_values COMMA fragment_or_variable EQUALS fragment .

    $default  reduce using rule 19 (key_values)
