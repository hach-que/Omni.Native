Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | COLON expression
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | /* empty */

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace

   21 assignment: DOLLAR VARIABLE EQUALS fragments

   22 pipeline: instruction
   23         | pipeline PIPE instruction

   24 instruction: command

   25 key_values: key_name
   26           | key_name EQUALS fragment
   27           | key_values COMMA key_name EQUALS fragment
   28           | key_values COMMA key_name

   29 key_name: fragment_or_variable
   30         | QUESTION_MARK

   31 command: arguments

   32 arguments: fragments
   33          | arguments WHITESPACE fragments

   34 fragments: fragment
   35          | fragments fragment
   36          | fragments keyword_as_string

   37 fragment: fragment_or_variable
   38         | number
   39         | MINUS
   40         | PHP
   41         | SINGLE_QUOTED
   42         | DOUBLE_QUOTED
   43         | DOLLAR VARIABLE
   44         | DOLLAR NUMBER
   45         | DOLLAR QUESTION_MARK
   46         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | BEGIN_PAREN expression END_PAREN
   49         | array_decl

   50 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | AT BEGIN_PAREN array_def END_PAREN
   52           | AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

   53 array_def: array_element
   54          | array_def COMMA array_element

   55 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | optional_whitespace fragment optional_whitespace

   57 number: NUMBER

   58 keyword_as_string: KEYWORD_IF
   59                  | KEYWORD_ELSE
   60                  | KEYWORD_WHILE
   61                  | KEYWORD_FOR
   62                  | KEYWORD_FOREACH
   63                  | KEYWORD_DO
   64                  | KEYWORD_BREAK
   65                  | KEYWORD_CONTINUE
   66                  | KEYWORD_AS

   67 fragment_or_variable: FRAGMENT
   68                     | VARIABLE

   69 expression: fragment
   70           | expression ACCESS expression
   71           | expression BEGIN_PAREN END_PAREN
   72           | expression BEGIN_PAREN comma_arguments END_PAREN
   73           | expression DIVIDE expression
   74           | expression MULTIPLY expression
   75           | expression ADD expression
   76           | expression WHITESPACE MINUS expression

   77 comma_arguments: fragments
   78                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 33 76
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 23
PERCENT (263)
DOLLAR (264) 19 20 21 43 44 45 46 47
BEGIN_PAREN (265) 46 47 48 50 51 52 71 72
END_PAREN (266) 46 47 48 50 51 52 71 72
EQUALS (267) 21 26 27
BEGIN_SQUARE (268) 47
END_SQUARE (269) 47
BEGIN_BRACE (270) 13 14 15 16 17
END_BRACE (271) 13 14 15 16 17
COMMA (272) 27 28 52 54 78
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 70
MAP (278) 19 55
MINUS (279) 39 76
ADD (280) 75
MULTIPLY (281) 74
DIVIDE (282) 73
AT (283) 50 51 52
COLON (284) 12
KEYWORD_WHILE (285) 15 16 60
KEYWORD_DO (286) 16 63
KEYWORD_FOR (287) 61
KEYWORD_FOREACH (288) 17 62
KEYWORD_BREAK (289) 64
KEYWORD_CONTINUE (290) 65
KEYWORD_IF (291) 13 14 58
KEYWORD_ELSE (292) 13 59
KEYWORD_AS (293) 17 66
NUMBER (294) 44 57
FRAGMENT (295) 67
SINGLE_QUOTED (296) 41
DOUBLE_QUOTED (297) 42
VARIABLE (298) 19 20 21 43 68
QUESTION_MARK (299) 30 45
PHP (300) 40


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
root (47)
    on left: 1, on right: 0
statements (48)
    on left: 2 3, on right: 1 3 13 14 15 16 17
terminator (49)
    on left: 4 5, on right: 3
optional_whitespace (50)
    on left: 6 7 8, on right: 13 14 15 16 17 19 20 50 52 55 56
statement (51)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 2 3
mapping (52)
    on left: 19 20, on right: 17
assignment (53)
    on left: 21, on right: 11
pipeline (54)
    on left: 22 23, on right: 9 10 23 46 47
instruction (55)
    on left: 24, on right: 22 23
key_values (56)
    on left: 25 26 27 28, on right: 27 28 47
key_name (57)
    on left: 29 30, on right: 25 26 27 28
command (58)
    on left: 31, on right: 24
arguments (59)
    on left: 32 33, on right: 31 33
fragments (60)
    on left: 34 35 36, on right: 21 32 33 35 36 77 78
fragment (61)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49, on right: 13 14
    15 16 17 26 27 34 35 55 56 69
array_decl (62)
    on left: 50 51 52, on right: 49
array_def (63)
    on left: 53 54, on right: 51 52 54
array_element (64)
    on left: 55 56, on right: 53 54
number (65)
    on left: 57, on right: 38
keyword_as_string (66)
    on left: 58 59 60 61 62 63 64 65 66, on right: 36
fragment_or_variable (67)
    on left: 67 68, on right: 29 37
expression (68)
    on left: 69 70 71 72 73 74 75 76, on right: 12 48 70 71 72 73 74
    75 76
comma_arguments (69)
    on left: 77 78, on right: 72 78


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    root                  go to state 16
    statements            go to state 17
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 1

   21 assignment: DOLLAR . VARIABLE EQUALS fragments
   43 fragment: DOLLAR . VARIABLE
   44         | DOLLAR . NUMBER
   45         | DOLLAR . QUESTION_MARK
   46         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   47         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 32
    QUESTION_MARK  shift, and go to state 33


State 2

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   48         | BEGIN_PAREN . expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 36


State 3

   39 fragment: MINUS .

    $default  reduce using rule 39 (fragment)


State 4

   50 array_decl: AT . BEGIN_PAREN optional_whitespace END_PAREN
   51           | AT . BEGIN_PAREN array_def END_PAREN
   52           | AT . BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

    BEGIN_PAREN  shift, and go to state 37


State 5

   12 statement: COLON . expression
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 38


State 6

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 41


State 7

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 42


State 8

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH . optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 43


State 9

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 44


State 10

   57 number: NUMBER .

    $default  reduce using rule 57 (number)


State 11

   67 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 67 (fragment_or_variable)


State 12

   41 fragment: SINGLE_QUOTED .

    $default  reduce using rule 41 (fragment)


State 13

   42 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 42 (fragment)


State 14

   68 fragment_or_variable: VARIABLE .

    $default  reduce using rule 68 (fragment_or_variable)


State 15

   40 fragment: PHP .

    $default  reduce using rule 40 (fragment)


State 16

    0 $accept: root . $end

    $end  shift, and go to state 45


State 17

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 46
    SEMICOLON            shift, and go to state 47

    $default  reduce using rule 1 (root)

    terminator  go to state 48


State 18

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 19

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 20

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 49
    AMPERSAND  shift, and go to state 50

    $default  reduce using rule 10 (statement)


State 21

   22 pipeline: instruction .

    $default  reduce using rule 22 (pipeline)


State 22

   24 instruction: command .

    $default  reduce using rule 24 (instruction)


State 23

   31 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   33 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 51

    $default  reduce using rule 31 (command)


State 24

   32 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   35 fragments: fragments . fragment
   36          | fragments . keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   58 keyword_as_string: . KEYWORD_IF
   59                  | . KEYWORD_ELSE
   60                  | . KEYWORD_WHILE
   61                  | . KEYWORD_FOR
   62                  | . KEYWORD_FOREACH
   63                  | . KEYWORD_DO
   64                  | . KEYWORD_BREAK
   65                  | . KEYWORD_CONTINUE
   66                  | . KEYWORD_AS
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 52
    KEYWORD_DO        shift, and go to state 53
    KEYWORD_FOR       shift, and go to state 54
    KEYWORD_FOREACH   shift, and go to state 55
    KEYWORD_BREAK     shift, and go to state 56
    KEYWORD_CONTINUE  shift, and go to state 57
    KEYWORD_IF        shift, and go to state 58
    KEYWORD_ELSE      shift, and go to state 59
    KEYWORD_AS        shift, and go to state 60
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 32 (arguments)

    fragment              go to state 61
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 62
    fragment_or_variable  go to state 28


State 25

   34 fragments: fragment .

    $default  reduce using rule 34 (fragments)


State 26

   49 fragment: array_decl .

    $default  reduce using rule 49 (fragment)


State 27

   38 fragment: number .

    $default  reduce using rule 38 (fragment)


State 28

   37 fragment: fragment_or_variable .

    $default  reduce using rule 37 (fragment)


State 29

   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   46         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 63
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 30

   25 key_values: . key_name
   26           | . key_name EQUALS fragment
   27           | . key_values COMMA key_name EQUALS fragment
   28           | . key_values COMMA key_name
   29 key_name: . fragment_or_variable
   30         | . QUESTION_MARK
   47 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 64

    key_values            go to state 65
    key_name              go to state 66
    fragment_or_variable  go to state 67


State 31

   44 fragment: DOLLAR NUMBER .

    $default  reduce using rule 44 (fragment)


State 32

   21 assignment: DOLLAR VARIABLE . EQUALS fragments
   43 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, AT, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_AS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 68

    $default  reduce using rule 43 (fragment)


State 33

   45 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 45 (fragment)


State 34

   43 fragment: DOLLAR . VARIABLE
   44         | DOLLAR . NUMBER
   45         | DOLLAR . QUESTION_MARK
   46         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   47         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 69
    QUESTION_MARK  shift, and go to state 33


State 35

   69 expression: fragment .

    $default  reduce using rule 69 (expression)


State 36

   48 fragment: BEGIN_PAREN expression . END_PAREN
   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 70
    BEGIN_PAREN  shift, and go to state 71
    END_PAREN    shift, and go to state 72
    ACCESS       shift, and go to state 73
    ADD          shift, and go to state 74
    MULTIPLY     shift, and go to state 75
    DIVIDE       shift, and go to state 76


State 37

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   50 array_decl: AT BEGIN_PAREN . optional_whitespace END_PAREN
   51           | AT BEGIN_PAREN . array_def END_PAREN
   52           | AT BEGIN_PAREN . array_def COMMA optional_whitespace END_PAREN
   53 array_def: . array_element
   54          | . array_def COMMA array_element
   55 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 77
    array_def            go to state 78
    array_element        go to state 79


State 38

   12 statement: COLON expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 70
    BEGIN_PAREN  shift, and go to state 71
    ACCESS       shift, and go to state 73
    ADD          shift, and go to state 74
    MULTIPLY     shift, and go to state 75
    DIVIDE       shift, and go to state 76

    $default  reduce using rule 12 (statement)


State 39

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 40

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 41

   15 statement: KEYWORD_WHILE optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 80
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 42

   16 statement: KEYWORD_DO optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    BEGIN_BRACE  shift, and go to state 81


State 43

   17 statement: KEYWORD_FOREACH optional_whitespace . fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 82
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 44

   13 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 83
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 45

    0 $accept: root $end .

    $default  accept


State 46

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 47

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 48

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statement             go to state 84
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 49

   23 pipeline: pipeline PIPE . instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    instruction           go to state 85
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 50

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 51

   33 arguments: arguments WHITESPACE . fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 86
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 52

   60 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 60 (keyword_as_string)


State 53

   63 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 63 (keyword_as_string)


State 54

   61 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 61 (keyword_as_string)


State 55

   62 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 62 (keyword_as_string)


State 56

   64 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 64 (keyword_as_string)


State 57

   65 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 65 (keyword_as_string)


State 58

   58 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 58 (keyword_as_string)


State 59

   59 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 59 (keyword_as_string)


State 60

   66 keyword_as_string: KEYWORD_AS .

    $default  reduce using rule 66 (keyword_as_string)


State 61

   35 fragments: fragments fragment .

    $default  reduce using rule 35 (fragments)


State 62

   36 fragments: fragments keyword_as_string .

    $default  reduce using rule 36 (fragments)


State 63

   23 pipeline: pipeline . PIPE instruction
   46 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 49
    END_PAREN  shift, and go to state 87


State 64

   30 key_name: QUESTION_MARK .

    $default  reduce using rule 30 (key_name)


State 65

   27 key_values: key_values . COMMA key_name EQUALS fragment
   28           | key_values . COMMA key_name
   47 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 88
    COMMA       shift, and go to state 89


State 66

   25 key_values: key_name .  [END_SQUARE, COMMA]
   26           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 90

    $default  reduce using rule 25 (key_values)


State 67

   29 key_name: fragment_or_variable .

    $default  reduce using rule 29 (key_name)


State 68

   21 assignment: DOLLAR VARIABLE EQUALS . fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 91
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 69

   43 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 43 (fragment)


State 70

   76 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 92


State 71

   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   71 expression: expression BEGIN_PAREN . END_PAREN
   72           | expression BEGIN_PAREN . comma_arguments END_PAREN
   77 comma_arguments: . fragments
   78                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 93
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 94
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    comma_arguments       go to state 95


State 72

   48 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 48 (fragment)


State 73

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   70           | expression ACCESS . expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 96


State 74

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   75           | expression ADD . expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 97


State 75

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   74           | expression MULTIPLY . expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 98


State 76

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   73           | expression DIVIDE . expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 99


State 77

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   50           | AT BEGIN_PAREN optional_whitespace . END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   55 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | optional_whitespace . fragment optional_whitespace
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 100
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 101
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 78

   51 array_decl: AT BEGIN_PAREN array_def . END_PAREN
   52           | AT BEGIN_PAREN array_def . COMMA optional_whitespace END_PAREN
   54 array_def: array_def . COMMA array_element

    END_PAREN  shift, and go to state 102
    COMMA      shift, and go to state 103


State 79

   53 array_def: array_element .

    $default  reduce using rule 53 (array_def)


State 80

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 104


State 81

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 105
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 82

    6 optional_whitespace: .  [KEYWORD_AS]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment . optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 106


State 83

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 107


State 84

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 85

   23 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 23 (pipeline)


State 86

   33 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   35 fragments: fragments . fragment
   36          | fragments . keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   58 keyword_as_string: . KEYWORD_IF
   59                  | . KEYWORD_ELSE
   60                  | . KEYWORD_WHILE
   61                  | . KEYWORD_FOR
   62                  | . KEYWORD_FOREACH
   63                  | . KEYWORD_DO
   64                  | . KEYWORD_BREAK
   65                  | . KEYWORD_CONTINUE
   66                  | . KEYWORD_AS
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 52
    KEYWORD_DO        shift, and go to state 53
    KEYWORD_FOR       shift, and go to state 54
    KEYWORD_FOREACH   shift, and go to state 55
    KEYWORD_BREAK     shift, and go to state 56
    KEYWORD_CONTINUE  shift, and go to state 57
    KEYWORD_IF        shift, and go to state 58
    KEYWORD_ELSE      shift, and go to state 59
    KEYWORD_AS        shift, and go to state 60
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 33 (arguments)

    fragment              go to state 61
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 62
    fragment_or_variable  go to state 28


State 87

   46 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 46 (fragment)


State 88

   47 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 108


State 89

   27 key_values: key_values COMMA . key_name EQUALS fragment
   28           | key_values COMMA . key_name
   29 key_name: . fragment_or_variable
   30         | . QUESTION_MARK
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 64

    key_name              go to state 109
    fragment_or_variable  go to state 67


State 90

   26 key_values: key_name EQUALS . fragment
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 110
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 91

   21 assignment: DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   35 fragments: fragments . fragment
   36          | fragments . keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   58 keyword_as_string: . KEYWORD_IF
   59                  | . KEYWORD_ELSE
   60                  | . KEYWORD_WHILE
   61                  | . KEYWORD_FOR
   62                  | . KEYWORD_FOREACH
   63                  | . KEYWORD_DO
   64                  | . KEYWORD_BREAK
   65                  | . KEYWORD_CONTINUE
   66                  | . KEYWORD_AS
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 52
    KEYWORD_DO        shift, and go to state 53
    KEYWORD_FOR       shift, and go to state 54
    KEYWORD_FOREACH   shift, and go to state 55
    KEYWORD_BREAK     shift, and go to state 56
    KEYWORD_CONTINUE  shift, and go to state 57
    KEYWORD_IF        shift, and go to state 58
    KEYWORD_ELSE      shift, and go to state 59
    KEYWORD_AS        shift, and go to state 60
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 21 (assignment)

    fragment              go to state 61
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 62
    fragment_or_variable  go to state 28


State 92

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   69 expression: . fragment
   70           | . expression ACCESS expression
   71           | . expression BEGIN_PAREN END_PAREN
   72           | . expression BEGIN_PAREN comma_arguments END_PAREN
   73           | . expression DIVIDE expression
   74           | . expression MULTIPLY expression
   75           | . expression ADD expression
   76           | . expression WHITESPACE MINUS expression
   76           | expression WHITESPACE MINUS . expression

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 35
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 111


State 93

   71 expression: expression BEGIN_PAREN END_PAREN .

    $default  reduce using rule 71 (expression)


State 94

   35 fragments: fragments . fragment
   36          | fragments . keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   58 keyword_as_string: . KEYWORD_IF
   59                  | . KEYWORD_ELSE
   60                  | . KEYWORD_WHILE
   61                  | . KEYWORD_FOR
   62                  | . KEYWORD_FOREACH
   63                  | . KEYWORD_DO
   64                  | . KEYWORD_BREAK
   65                  | . KEYWORD_CONTINUE
   66                  | . KEYWORD_AS
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   77 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 52
    KEYWORD_DO        shift, and go to state 53
    KEYWORD_FOR       shift, and go to state 54
    KEYWORD_FOREACH   shift, and go to state 55
    KEYWORD_BREAK     shift, and go to state 56
    KEYWORD_CONTINUE  shift, and go to state 57
    KEYWORD_IF        shift, and go to state 58
    KEYWORD_ELSE      shift, and go to state 59
    KEYWORD_AS        shift, and go to state 60
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 77 (comma_arguments)

    fragment              go to state 61
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 62
    fragment_or_variable  go to state 28


State 95

   72 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   78 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 112
    COMMA      shift, and go to state 113


State 96

   70 expression: expression . ACCESS expression
   70           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 70 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 70 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 70 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 70 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 70 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 97

   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   75           | expression ADD expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, END_BRACE, SEMICOLON, ADD]
   76           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 71
    ACCESS       shift, and go to state 73
    MULTIPLY     shift, and go to state 75
    DIVIDE       shift, and go to state 76

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 75 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 75 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 75 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 75 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 75 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 98

   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   74           | expression MULTIPLY expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 71
    ACCESS       shift, and go to state 73

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 74 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 74 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 74 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 74 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 74 and token DIVIDE resolved as reduce (%left DIVIDE).


State 99

   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   73           | expression DIVIDE expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 71
    ACCESS       shift, and go to state 73

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 73 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 73 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 73 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 73 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 73 and token DIVIDE resolved as reduce (%left DIVIDE).


State 100

   50 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN .

    $default  reduce using rule 50 (array_decl)


State 101

    6 optional_whitespace: .  [END_PAREN, COMMA, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   55 array_element: optional_whitespace fragment . optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 114


State 102

   51 array_decl: AT BEGIN_PAREN array_def END_PAREN .

    $default  reduce using rule 51 (array_decl)


State 103

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   52 array_decl: AT BEGIN_PAREN array_def COMMA . optional_whitespace END_PAREN
   54 array_def: array_def COMMA . array_element
   55 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 115
    array_element        go to state 116


State 104

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 117


State 105

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_WHILE optional_whitespace fragment

    TERMINATING_NEWLINE  shift, and go to state 46
    END_BRACE            shift, and go to state 118
    SEMICOLON            shift, and go to state 47

    terminator  go to state 48


State 106

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace . KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    KEYWORD_AS  shift, and go to state 119


State 107

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 120


State 108

   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   47         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 121
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 109

   27 key_values: key_values COMMA key_name . EQUALS fragment
   28           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 122

    $default  reduce using rule 28 (key_values)


State 110

   26 key_values: key_name EQUALS fragment .

    $default  reduce using rule 26 (key_values)


State 111

   70 expression: expression . ACCESS expression
   71           | expression . BEGIN_PAREN END_PAREN
   72           | expression . BEGIN_PAREN comma_arguments END_PAREN
   73           | expression . DIVIDE expression
   74           | expression . MULTIPLY expression
   75           | expression . ADD expression
   76           | expression . WHITESPACE MINUS expression
   76           | expression WHITESPACE MINUS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, END_BRACE, SEMICOLON, ADD]

    BEGIN_PAREN  shift, and go to state 71
    ACCESS       shift, and go to state 73
    MULTIPLY     shift, and go to state 75
    DIVIDE       shift, and go to state 76

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 76 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 76 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 76 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 76 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 76 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 112

   72 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 72 (expression)


State 113

   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   78 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 123
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 114

   55 array_element: optional_whitespace fragment optional_whitespace . MAP optional_whitespace fragment optional_whitespace
   56              | optional_whitespace fragment optional_whitespace .  [END_PAREN, COMMA]

    MAP  shift, and go to state 124

    $default  reduce using rule 56 (array_element)


State 115

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   52           | AT BEGIN_PAREN array_def COMMA optional_whitespace . END_PAREN
   55 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   56              | optional_whitespace . fragment optional_whitespace
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 125
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 101
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 116

   54 array_def: array_def COMMA array_element .

    $default  reduce using rule 54 (array_def)


State 117

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 126
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 118

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_WHILE optional_whitespace fragment

    KEYWORD_WHILE  shift, and go to state 127


State 119

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS . optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 128


State 120

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 129
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 121

   23 pipeline: pipeline . PIPE instruction
   47 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 49
    END_PAREN  shift, and go to state 130


State 122

   27 key_values: key_values COMMA key_name EQUALS . fragment
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 131
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 123

   35 fragments: fragments . fragment
   36          | fragments . keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   58 keyword_as_string: . KEYWORD_IF
   59                  | . KEYWORD_ELSE
   60                  | . KEYWORD_WHILE
   61                  | . KEYWORD_FOR
   62                  | . KEYWORD_FOREACH
   63                  | . KEYWORD_DO
   64                  | . KEYWORD_BREAK
   65                  | . KEYWORD_CONTINUE
   66                  | . KEYWORD_AS
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE
   78 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 52
    KEYWORD_DO        shift, and go to state 53
    KEYWORD_FOR       shift, and go to state 54
    KEYWORD_FOREACH   shift, and go to state 55
    KEYWORD_BREAK     shift, and go to state 56
    KEYWORD_CONTINUE  shift, and go to state 57
    KEYWORD_IF        shift, and go to state 58
    KEYWORD_ELSE      shift, and go to state 59
    KEYWORD_AS        shift, and go to state 60
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 78 (comma_arguments)

    fragment              go to state 61
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 62
    fragment_or_variable  go to state 28


State 124

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   55 array_element: optional_whitespace fragment optional_whitespace MAP . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 132


State 125

   52 array_decl: AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN .

    $default  reduce using rule 52 (array_decl)


State 126

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 46
    END_BRACE            shift, and go to state 133
    SEMICOLON            shift, and go to state 47

    terminator  go to state 48


State 127

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE . optional_whitespace fragment

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 134


State 128

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace . mapping BEGIN_BRACE statements END_BRACE
   19 mapping: . DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 135

    mapping  go to state 136


State 129

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 46
    END_BRACE            shift, and go to state 137
    SEMICOLON            shift, and go to state 47

    terminator  go to state 48


State 130

   47 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 47 (fragment)


State 131

   27 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 27 (key_values)


State 132

   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   55 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace . fragment optional_whitespace
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 138
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 133

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 15 (statement)


State 134

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace . fragment
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 139
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 135

   19 mapping: DOLLAR . VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 140


State 136

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 141


State 137

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 142

    $default  reduce using rule 14 (statement)


State 138

    6 optional_whitespace: .  [END_PAREN, COMMA]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   55 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 143


State 139

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment .

    $default  reduce using rule 16 (statement)


State 140

    6 optional_whitespace: .  [BEGIN_BRACE, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE . optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 144


State 141

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE . statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 145
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 142

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 146


State 143

   55 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace .

    $default  reduce using rule 55 (array_element)


State 144

   19 mapping: DOLLAR VARIABLE optional_whitespace . MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace .  [BEGIN_BRACE]

    MAP  shift, and go to state 147

    $default  reduce using rule 20 (mapping)


State 145

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 46
    END_BRACE            shift, and go to state 148
    SEMICOLON            shift, and go to state 47

    terminator  go to state 48


State 146

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   21 assignment: . DOLLAR VARIABLE EQUALS fragments
   22 pipeline: . instruction
   23         | . pipeline PIPE instruction
   24 instruction: . command
   31 command: . arguments
   32 arguments: . fragments
   33          | . arguments WHITESPACE fragments
   34 fragments: . fragment
   35          | . fragments fragment
   36          | . fragments keyword_as_string
   37 fragment: . fragment_or_variable
   38         | . number
   39         | . MINUS
   40         | . PHP
   41         | . SINGLE_QUOTED
   42         | . DOUBLE_QUOTED
   43         | . DOLLAR VARIABLE
   44         | . DOLLAR NUMBER
   45         | . DOLLAR QUESTION_MARK
   46         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   47         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   48         | . BEGIN_PAREN expression END_PAREN
   49         | . array_decl
   50 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   51           | . AT BEGIN_PAREN array_def END_PAREN
   52           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57 number: . NUMBER
   67 fragment_or_variable: . FRAGMENT
   68                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 149
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 147

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP . optional_whitespace DOLLAR VARIABLE optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 150


State 148

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 17 (statement)


State 149

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 46
    END_BRACE            shift, and go to state 151
    SEMICOLON            shift, and go to state 47

    terminator  go to state 48


State 150

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 152


State 151

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 13 (statement)


State 152

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 153


State 153

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 39
    TERMINATING_NEWLINE  shift, and go to state 40

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 154


State 154

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace .

    $default  reduce using rule 19 (mapping)
