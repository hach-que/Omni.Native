Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   BEGIN_BRACE
   END_BRACE
   COMMAND_PIPE
   ERROR
   MAP


Grammar

    0 $accept: root $end

    1 root: statement
    2     | root terminator statement

    3 terminator: TERMINATING_NEWLINE
    4           | SEMICOLON

    5 statement: pipeline AMPERSAND
    6          | pipeline
    7          | assignment
    8          | /* empty */

    9 assignment: DOLLAR VARIABLE EQUALS fragments

   10 pipeline: instruction
   11         | pipeline PIPE instruction

   12 instruction: command
   13            | capture

   14 capture: PERCENT BEGIN_PAREN command END_PAREN
   15        | PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN

   16 key_values: fragment_or_variable EQUALS fragment
   17           | key_values COMMA fragment_or_variable EQUALS fragment

   18 command: arguments

   19 arguments: fragments
   20          | arguments WHITESPACE fragments

   21 fragments: fragment
   22          | fragments fragment

   23 fragment: fragment_or_variable
   24         | number
   25         | MINUS
   26         | SINGLE_QUOTED
   27         | DOUBLE_QUOTED
   28         | DOLLAR VARIABLE
   29         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | BEGIN_PAREN expression END_PAREN

   31 number: NUMBER

   32 fragment_or_variable: FRAGMENT
   33                     | VARIABLE

   34 expression: fragment
   35           | expression ACCESS expression
   36           | expression BEGIN_PAREN comma_arguments END_PAREN
   37           | expression DIVIDE expression
   38           | expression MULTIPLY expression
   39           | expression ADD expression
   40           | expression MINUS expression

   41 comma_arguments: fragments
   42                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 20
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 3
PIPE (262) 11
PERCENT (263) 14 15
DOLLAR (264) 9 28 29
BEGIN_PAREN (265) 14 15 29 30 36
END_PAREN (266) 14 15 29 30 36
EQUALS (267) 9 16 17
BEGIN_SQUARE (268) 15
END_SQUARE (269) 15
BEGIN_BRACE (270)
END_BRACE (271)
COMMA (272) 17 42
COMMAND_PIPE (273)
SEMICOLON (274) 4
AMPERSAND (275) 5
ERROR (276)
ACCESS (277) 35
MAP (278)
MINUS (279) 25 40
ADD (280) 39
MULTIPLY (281) 38
DIVIDE (282) 37
NUMBER (283) 31
FRAGMENT (284) 32
SINGLE_QUOTED (285) 26
DOUBLE_QUOTED (286) 27
VARIABLE (287) 9 28 33


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
root (34)
    on left: 1 2, on right: 0 2
terminator (35)
    on left: 3 4, on right: 2
statement (36)
    on left: 5 6 7 8, on right: 1 2
assignment (37)
    on left: 9, on right: 7
pipeline (38)
    on left: 10 11, on right: 5 6 11 29
instruction (39)
    on left: 12 13, on right: 10 11
capture (40)
    on left: 14 15, on right: 13
key_values (41)
    on left: 16 17, on right: 15 17
command (42)
    on left: 18, on right: 12 14 15
arguments (43)
    on left: 19 20, on right: 18 20
fragments (44)
    on left: 21 22, on right: 9 19 20 22 41 42
fragment (45)
    on left: 23 24 25 26 27 28 29 30, on right: 16 17 21 22 34
number (46)
    on left: 31, on right: 24
fragment_or_variable (47)
    on left: 32 33, on right: 16 17 23
expression (48)
    on left: 34 35 36 37 38 39 40, on right: 30 35 36 37 38 39 40
comma_arguments (49)
    on left: 41 42, on right: 36 42


State 0

    0 $accept: . root $end
    1 root: . statement
    2     | . root terminator statement
    5 statement: . pipeline AMPERSAND
    6          | . pipeline
    7          | . assignment
    8          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
    9 assignment: . DOLLAR VARIABLE EQUALS fragments
   10 pipeline: . instruction
   11         | . pipeline PIPE instruction
   12 instruction: . command
   13            | . capture
   14 capture: . PERCENT BEGIN_PAREN command END_PAREN
   15        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 2
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 8 (statement)

    root                  go to state 10
    statement             go to state 11
    assignment            go to state 12
    pipeline              go to state 13
    instruction           go to state 14
    capture               go to state 15
    command               go to state 16
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 1

   14 capture: PERCENT . BEGIN_PAREN command END_PAREN
   15        | PERCENT . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN

    BEGIN_PAREN   shift, and go to state 22
    BEGIN_SQUARE  shift, and go to state 23


State 2

    9 assignment: DOLLAR . VARIABLE EQUALS fragments
   28 fragment: DOLLAR . VARIABLE
   29         | DOLLAR . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 24
    VARIABLE     shift, and go to state 25


State 3

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   30         | BEGIN_PAREN . expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   38           | . expression MULTIPLY expression
   39           | . expression ADD expression
   40           | . expression MINUS expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 28


State 4

   25 fragment: MINUS .

    $default  reduce using rule 25 (fragment)


State 5

   31 number: NUMBER .

    $default  reduce using rule 31 (number)


State 6

   32 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 32 (fragment_or_variable)


State 7

   26 fragment: SINGLE_QUOTED .

    $default  reduce using rule 26 (fragment)


State 8

   27 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 27 (fragment)


State 9

   33 fragment_or_variable: VARIABLE .

    $default  reduce using rule 33 (fragment_or_variable)


State 10

    0 $accept: root . $end
    2 root: root . terminator statement
    3 terminator: . TERMINATING_NEWLINE
    4           | . SEMICOLON

    $end                 shift, and go to state 29
    TERMINATING_NEWLINE  shift, and go to state 30
    SEMICOLON            shift, and go to state 31

    terminator  go to state 32


State 11

    1 root: statement .

    $default  reduce using rule 1 (root)


State 12

    7 statement: assignment .

    $default  reduce using rule 7 (statement)


State 13

    5 statement: pipeline . AMPERSAND
    6          | pipeline .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   11 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 33
    AMPERSAND  shift, and go to state 34

    $default  reduce using rule 6 (statement)


State 14

   10 pipeline: instruction .

    $default  reduce using rule 10 (pipeline)


State 15

   13 instruction: capture .

    $default  reduce using rule 13 (instruction)


State 16

   12 instruction: command .

    $default  reduce using rule 12 (instruction)


State 17

   18 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   20 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 35

    $default  reduce using rule 18 (command)


State 18

   19 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   22 fragments: fragments . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 19 (arguments)

    fragment              go to state 36
    number                go to state 20
    fragment_or_variable  go to state 21


State 19

   21 fragments: fragment .

    $default  reduce using rule 21 (fragments)


State 20

   24 fragment: number .

    $default  reduce using rule 24 (fragment)


State 21

   23 fragment: fragment_or_variable .

    $default  reduce using rule 23 (fragment)


State 22

   14 capture: PERCENT BEGIN_PAREN . command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    command               go to state 37
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 23

   15 capture: PERCENT BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN command END_PAREN
   16 key_values: . fragment_or_variable EQUALS fragment
   17           | . key_values COMMA fragment_or_variable EQUALS fragment
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    FRAGMENT  shift, and go to state 6
    VARIABLE  shift, and go to state 9

    key_values            go to state 38
    fragment_or_variable  go to state 39


State 24

   10 pipeline: . instruction
   11         | . pipeline PIPE instruction
   12 instruction: . command
   13            | . capture
   14 capture: . PERCENT BEGIN_PAREN command END_PAREN
   15        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   29         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    pipeline              go to state 40
    instruction           go to state 14
    capture               go to state 15
    command               go to state 16
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 25

    9 assignment: DOLLAR VARIABLE . EQUALS fragments
   28 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, SEMICOLON, AMPERSAND, MINUS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE]

    EQUALS  shift, and go to state 41

    $default  reduce using rule 28 (fragment)


State 26

   28 fragment: DOLLAR . VARIABLE
   29         | DOLLAR . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 24
    VARIABLE     shift, and go to state 42


State 27

   34 expression: fragment .

    $default  reduce using rule 34 (expression)


State 28

   30 fragment: BEGIN_PAREN expression . END_PAREN
   35 expression: expression . ACCESS expression
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   38           | expression . MULTIPLY expression
   39           | expression . ADD expression
   40           | expression . MINUS expression

    BEGIN_PAREN  shift, and go to state 43
    END_PAREN    shift, and go to state 44
    ACCESS       shift, and go to state 45
    MINUS        shift, and go to state 46
    ADD          shift, and go to state 47
    MULTIPLY     shift, and go to state 48
    DIVIDE       shift, and go to state 49


State 29

    0 $accept: root $end .

    $default  accept


State 30

    3 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 3 (terminator)


State 31

    4 terminator: SEMICOLON .

    $default  reduce using rule 4 (terminator)


State 32

    2 root: root terminator . statement
    5 statement: . pipeline AMPERSAND
    6          | . pipeline
    7          | . assignment
    8          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
    9 assignment: . DOLLAR VARIABLE EQUALS fragments
   10 pipeline: . instruction
   11         | . pipeline PIPE instruction
   12 instruction: . command
   13            | . capture
   14 capture: . PERCENT BEGIN_PAREN command END_PAREN
   15        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 2
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 8 (statement)

    statement             go to state 50
    assignment            go to state 12
    pipeline              go to state 13
    instruction           go to state 14
    capture               go to state 15
    command               go to state 16
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 33

   11 pipeline: pipeline PIPE . instruction
   12 instruction: . command
   13            | . capture
   14 capture: . PERCENT BEGIN_PAREN command END_PAREN
   15        | . PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    PERCENT        shift, and go to state 1
    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    instruction           go to state 51
    capture               go to state 15
    command               go to state 16
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 34

    5 statement: pipeline AMPERSAND .

    $default  reduce using rule 5 (statement)


State 35

   20 arguments: arguments WHITESPACE . fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragments             go to state 52
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 36

   22 fragments: fragments fragment .

    $default  reduce using rule 22 (fragments)


State 37

   14 capture: PERCENT BEGIN_PAREN command . END_PAREN

    END_PAREN  shift, and go to state 53


State 38

   15 capture: PERCENT BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN command END_PAREN
   17 key_values: key_values . COMMA fragment_or_variable EQUALS fragment

    END_SQUARE  shift, and go to state 54
    COMMA       shift, and go to state 55


State 39

   16 key_values: fragment_or_variable . EQUALS fragment

    EQUALS  shift, and go to state 56


State 40

   11 pipeline: pipeline . PIPE instruction
   29 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 33
    END_PAREN  shift, and go to state 57


State 41

    9 assignment: DOLLAR VARIABLE EQUALS . fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragments             go to state 58
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 42

   28 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 28 (fragment)


State 43

   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   36 expression: expression BEGIN_PAREN . comma_arguments END_PAREN
   41 comma_arguments: . fragments
   42                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragments             go to state 59
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21
    comma_arguments       go to state 60


State 44

   30 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 30 (fragment)


State 45

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   35           | expression ACCESS . expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   38           | . expression MULTIPLY expression
   39           | . expression ADD expression
   40           | . expression MINUS expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 61


State 46

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   38           | . expression MULTIPLY expression
   39           | . expression ADD expression
   40           | . expression MINUS expression
   40           | expression MINUS . expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 62


State 47

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   38           | . expression MULTIPLY expression
   39           | . expression ADD expression
   39           | expression ADD . expression
   40           | . expression MINUS expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 63


State 48

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   38           | . expression MULTIPLY expression
   38           | expression MULTIPLY . expression
   39           | . expression ADD expression
   40           | . expression MINUS expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 64


State 49

   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   34 expression: . fragment
   35           | . expression ACCESS expression
   36           | . expression BEGIN_PAREN comma_arguments END_PAREN
   37           | . expression DIVIDE expression
   37           | expression DIVIDE . expression
   38           | . expression MULTIPLY expression
   39           | . expression ADD expression
   40           | . expression MINUS expression

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 27
    number                go to state 20
    fragment_or_variable  go to state 21
    expression            go to state 65


State 50

    2 root: root terminator statement .

    $default  reduce using rule 2 (root)


State 51

   11 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 11 (pipeline)


State 52

   20 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, SEMICOLON, AMPERSAND]
   22 fragments: fragments . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 20 (arguments)

    fragment              go to state 36
    number                go to state 20
    fragment_or_variable  go to state 21


State 53

   14 capture: PERCENT BEGIN_PAREN command END_PAREN .

    $default  reduce using rule 14 (capture)


State 54

   15 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN command END_PAREN

    BEGIN_PAREN  shift, and go to state 66


State 55

   17 key_values: key_values COMMA . fragment_or_variable EQUALS fragment
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    FRAGMENT  shift, and go to state 6
    VARIABLE  shift, and go to state 9

    fragment_or_variable  go to state 67


State 56

   16 key_values: fragment_or_variable EQUALS . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 68
    number                go to state 20
    fragment_or_variable  go to state 21


State 57

   29 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 29 (fragment)


State 58

    9 assignment: DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   22 fragments: fragments . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 9 (assignment)

    fragment              go to state 36
    number                go to state 20
    fragment_or_variable  go to state 21


State 59

   22 fragments: fragments . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   41 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 41 (comma_arguments)

    fragment              go to state 36
    number                go to state 20
    fragment_or_variable  go to state 21


State 60

   36 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   42 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 69
    COMMA      shift, and go to state 70


State 61

   35 expression: expression . ACCESS expression
   35           | expression ACCESS expression .  [BEGIN_PAREN, END_PAREN, MINUS, ADD, MULTIPLY, DIVIDE]
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   38           | expression . MULTIPLY expression
   39           | expression . ADD expression
   40           | expression . MINUS expression

    ACCESS  error (nonassociative)

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 35 and token ACCESS resolved as an error (%nonassoc ACCESS).
    Conflict between rule 35 and token MINUS resolved as reduce (MINUS < ACCESS).
    Conflict between rule 35 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 35 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 35 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 62

   35 expression: expression . ACCESS expression
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   38           | expression . MULTIPLY expression
   39           | expression . ADD expression
   40           | expression . MINUS expression
   40           | expression MINUS expression .  [END_PAREN, MINUS, ADD]

    BEGIN_PAREN  shift, and go to state 43
    ACCESS       shift, and go to state 45
    MULTIPLY     shift, and go to state 48
    DIVIDE       shift, and go to state 49

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 40 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 40 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 40 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 40 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 40 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 63

   35 expression: expression . ACCESS expression
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   38           | expression . MULTIPLY expression
   39           | expression . ADD expression
   39           | expression ADD expression .  [END_PAREN, MINUS, ADD]
   40           | expression . MINUS expression

    BEGIN_PAREN  shift, and go to state 43
    ACCESS       shift, and go to state 45
    MULTIPLY     shift, and go to state 48
    DIVIDE       shift, and go to state 49

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 39 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 39 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 39 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 39 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 39 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 64

   35 expression: expression . ACCESS expression
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   38           | expression . MULTIPLY expression
   38           | expression MULTIPLY expression .  [END_PAREN, MINUS, ADD, MULTIPLY, DIVIDE]
   39           | expression . ADD expression
   40           | expression . MINUS expression

    BEGIN_PAREN  shift, and go to state 43
    ACCESS       shift, and go to state 45

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 38 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 38 and token MINUS resolved as reduce (MINUS < MULTIPLY).
    Conflict between rule 38 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 38 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 38 and token DIVIDE resolved as reduce (%left DIVIDE).


State 65

   35 expression: expression . ACCESS expression
   36           | expression . BEGIN_PAREN comma_arguments END_PAREN
   37           | expression . DIVIDE expression
   37           | expression DIVIDE expression .  [END_PAREN, MINUS, ADD, MULTIPLY, DIVIDE]
   38           | expression . MULTIPLY expression
   39           | expression . ADD expression
   40           | expression . MINUS expression

    BEGIN_PAREN  shift, and go to state 43
    ACCESS       shift, and go to state 45

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 37 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 37 and token MINUS resolved as reduce (MINUS < DIVIDE).
    Conflict between rule 37 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 37 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 37 and token DIVIDE resolved as reduce (%left DIVIDE).


State 66

   15 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . command END_PAREN
   18 command: . arguments
   19 arguments: . fragments
   20          | . arguments WHITESPACE fragments
   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    command               go to state 71
    arguments             go to state 17
    fragments             go to state 18
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 67

   17 key_values: key_values COMMA fragment_or_variable . EQUALS fragment

    EQUALS  shift, and go to state 72


State 68

   16 key_values: fragment_or_variable EQUALS fragment .

    $default  reduce using rule 16 (key_values)


State 69

   36 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 36 (expression)


State 70

   21 fragments: . fragment
   22          | . fragments fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   42 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragments             go to state 73
    fragment              go to state 19
    number                go to state 20
    fragment_or_variable  go to state 21


State 71

   15 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command . END_PAREN

    END_PAREN  shift, and go to state 74


State 72

   17 key_values: key_values COMMA fragment_or_variable EQUALS . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    fragment              go to state 75
    number                go to state 20
    fragment_or_variable  go to state 21


State 73

   22 fragments: fragments . fragment
   23 fragment: . fragment_or_variable
   24         | . number
   25         | . MINUS
   26         | . SINGLE_QUOTED
   27         | . DOUBLE_QUOTED
   28         | . DOLLAR VARIABLE
   29         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   30         | . BEGIN_PAREN expression END_PAREN
   31 number: . NUMBER
   32 fragment_or_variable: . FRAGMENT
   33                     | . VARIABLE
   42 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR         shift, and go to state 26
    BEGIN_PAREN    shift, and go to state 3
    MINUS          shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9

    $default  reduce using rule 42 (comma_arguments)

    fragment              go to state 36
    number                go to state 20
    fragment_or_variable  go to state 21


State 74

   15 capture: PERCENT BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN command END_PAREN .

    $default  reduce using rule 15 (capture)


State 75

   17 key_values: key_values COMMA fragment_or_variable EQUALS fragment .

    $default  reduce using rule 17 (key_values)
