Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR
   UNTERMINATED_LEXING_BLOCK


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | COLON expression
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | KEYWORD_RETURN WHITESPACE expression
   19          | /* empty */

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE optional_whitespace

   22 fragments_or_function_declaration: fragments
   23                                  | function_declaration

   24 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration

   28 pipeline: instruction
   29         | pipeline PIPE instruction

   30 instruction: command

   31 key_values: key_name
   32           | key_name EQUALS fragment
   33           | key_values COMMA key_name EQUALS fragment
   34           | key_values COMMA key_name

   35 key_name: fragment_or_variable
   36         | QUESTION_MARK

   37 command: arguments

   38 arguments: fragments
   39          | arguments WHITESPACE fragments

   40 fragments: fragment
   41          | fragments fragment
   42          | fragments keyword_as_string

   43 fragment: fragment_or_variable
   44         | number
   45         | MINUS
   46         | PHP
   47         | SINGLE_QUOTED
   48         | DOUBLE_QUOTED
   49         | DOLLAR VARIABLE
   50         | DOLLAR NUMBER
   51         | DOLLAR QUESTION_MARK
   52         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | BEGIN_PAREN expression END_PAREN
   55         | array_decl

   56 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | AT BEGIN_PAREN array_def END_PAREN
   58           | AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

   59 array_def: array_element
   60          | array_def COMMA array_element

   61 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | optional_whitespace fragment optional_whitespace

   63 number: NUMBER

   64 keyword_as_string: KEYWORD_IF
   65                  | KEYWORD_ELSE
   66                  | KEYWORD_WHILE
   67                  | KEYWORD_FOR
   68                  | KEYWORD_FOREACH
   69                  | KEYWORD_DO
   70                  | KEYWORD_BREAK
   71                  | KEYWORD_CONTINUE
   72                  | KEYWORD_AS

   73 fragment_or_variable: FRAGMENT
   74                     | VARIABLE

   75 expression: fragment
   76           | expression ACCESS expression
   77           | expression BEGIN_PAREN END_PAREN
   78           | expression BEGIN_PAREN comma_arguments END_PAREN
   79           | expression DIVIDE expression
   80           | expression MULTIPLY expression
   81           | expression ADD expression
   82           | expression WHITESPACE MINUS expression
   83           | function_declaration

   84 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

   85 comma_arguments: fragments
   86                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 18 39 82
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 29
PERCENT (263)
DOLLAR (264) 20 21 24 25 49 50 51 52 53
BEGIN_PAREN (265) 52 53 54 56 57 58 77 78 84
END_PAREN (266) 52 53 54 56 57 58 77 78 84
EQUALS (267) 24 25 26 27 32 33
BEGIN_SQUARE (268) 27 53
END_SQUARE (269) 27 53
BEGIN_BRACE (270) 13 14 15 16 17 84
END_BRACE (271) 13 14 15 16 17 84
COMMA (272) 33 34 58 60 86
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 26 27 76
MAP (278) 20 61 84
MINUS (279) 45 82
ADD (280) 81
MULTIPLY (281) 80
DIVIDE (282) 79
AT (283) 56 57 58
COLON (284) 12 25 26 27
UNTERMINATED_LEXING_BLOCK (285)
KEYWORD_WHILE (286) 15 16 66
KEYWORD_DO (287) 16 69
KEYWORD_FOR (288) 67
KEYWORD_FOREACH (289) 17 68
KEYWORD_BREAK (290) 70
KEYWORD_CONTINUE (291) 71
KEYWORD_IF (292) 13 14 64
KEYWORD_ELSE (293) 13 65
KEYWORD_AS (294) 17 72
KEYWORD_RETURN (295) 18
NUMBER (296) 50 63
FRAGMENT (297) 73
SINGLE_QUOTED (298) 47
DOUBLE_QUOTED (299) 48
VARIABLE (300) 20 21 24 25 49 74
QUESTION_MARK (301) 36 51
PHP (302) 46


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
root (49)
    on left: 1, on right: 0
statements (50)
    on left: 2 3, on right: 1 3 13 14 15 16 17 84
terminator (51)
    on left: 4 5, on right: 3
optional_whitespace (52)
    on left: 6 7 8, on right: 13 14 15 16 17 20 21 56 58 61 62
statement (53)
    on left: 9 10 11 12 13 14 15 16 17 18 19, on right: 2 3
mapping (54)
    on left: 20 21, on right: 17
fragments_or_function_declaration (55)
    on left: 22 23, on right: 24 25 26 27
assignment (56)
    on left: 24 25 26 27, on right: 11
pipeline (57)
    on left: 28 29, on right: 9 10 29 52 53
instruction (58)
    on left: 30, on right: 28 29
key_values (59)
    on left: 31 32 33 34, on right: 33 34 53
key_name (60)
    on left: 35 36, on right: 31 32 33 34
command (61)
    on left: 37, on right: 30
arguments (62)
    on left: 38 39, on right: 37 39
fragments (63)
    on left: 40 41 42, on right: 22 38 39 41 42 85 86
fragment (64)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 13 14
    15 16 17 32 33 40 41 61 62 75
array_decl (65)
    on left: 56 57 58, on right: 55
array_def (66)
    on left: 59 60, on right: 57 58 60
array_element (67)
    on left: 61 62, on right: 59 60
number (68)
    on left: 63, on right: 44
keyword_as_string (69)
    on left: 64 65 66 67 68 69 70 71 72, on right: 42
fragment_or_variable (70)
    on left: 73 74, on right: 35 43
expression (71)
    on left: 75 76 77 78 79 80 81 82 83, on right: 12 18 26 27 54 76
    77 78 79 80 81 82
function_declaration (72)
    on left: 84, on right: 23 83
comma_arguments (73)
    on left: 85 86, on right: 78 86


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    root                  go to state 17
    statements            go to state 18
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 1

   24 assignment: DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   49 fragment: DOLLAR . VARIABLE
   50         | DOLLAR . NUMBER
   51         | DOLLAR . QUESTION_MARK
   52         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 30
    BEGIN_SQUARE   shift, and go to state 31
    NUMBER         shift, and go to state 32
    VARIABLE       shift, and go to state 33
    QUESTION_MARK  shift, and go to state 34


State 2

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   54         | BEGIN_PAREN . expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 38
    function_declaration  go to state 39


State 3

   45 fragment: MINUS .

    $default  reduce using rule 45 (fragment)


State 4

   56 array_decl: AT . BEGIN_PAREN optional_whitespace END_PAREN
   57           | AT . BEGIN_PAREN array_def END_PAREN
   58           | AT . BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

    BEGIN_PAREN  shift, and go to state 40


State 5

   12 statement: COLON . expression
   25 assignment: COLON . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | COLON . expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON . expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 41
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 42
    function_declaration  go to state 39


State 6

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 45


State 7

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 46


State 8

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH . optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 47


State 9

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 48


State 10

   18 statement: KEYWORD_RETURN . WHITESPACE expression

    WHITESPACE  shift, and go to state 49


State 11

   63 number: NUMBER .

    $default  reduce using rule 63 (number)


State 12

   73 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 73 (fragment_or_variable)


State 13

   47 fragment: SINGLE_QUOTED .

    $default  reduce using rule 47 (fragment)


State 14

   48 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 48 (fragment)


State 15

   74 fragment_or_variable: VARIABLE .

    $default  reduce using rule 74 (fragment_or_variable)


State 16

   46 fragment: PHP .

    $default  reduce using rule 46 (fragment)


State 17

    0 $accept: root . $end

    $end  shift, and go to state 50


State 18

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 51
    SEMICOLON            shift, and go to state 52

    $default  reduce using rule 1 (root)

    terminator  go to state 53


State 19

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 20

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 21

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   29 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 54
    AMPERSAND  shift, and go to state 55

    $default  reduce using rule 10 (statement)


State 22

   28 pipeline: instruction .

    $default  reduce using rule 28 (pipeline)


State 23

   30 instruction: command .

    $default  reduce using rule 30 (instruction)


State 24

   37 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   39 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 56

    $default  reduce using rule 37 (command)


State 25

   38 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   41 fragments: fragments . fragment
   42          | fragments . keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   64 keyword_as_string: . KEYWORD_IF
   65                  | . KEYWORD_ELSE
   66                  | . KEYWORD_WHILE
   67                  | . KEYWORD_FOR
   68                  | . KEYWORD_FOREACH
   69                  | . KEYWORD_DO
   70                  | . KEYWORD_BREAK
   71                  | . KEYWORD_CONTINUE
   72                  | . KEYWORD_AS
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR            shift, and go to state 35
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 57
    KEYWORD_DO        shift, and go to state 58
    KEYWORD_FOR       shift, and go to state 59
    KEYWORD_FOREACH   shift, and go to state 60
    KEYWORD_BREAK     shift, and go to state 61
    KEYWORD_CONTINUE  shift, and go to state 62
    KEYWORD_IF        shift, and go to state 63
    KEYWORD_ELSE      shift, and go to state 64
    KEYWORD_AS        shift, and go to state 65
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 38 (arguments)

    fragment              go to state 66
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 67
    fragment_or_variable  go to state 29


State 26

   40 fragments: fragment .

    $default  reduce using rule 40 (fragments)


State 27

   55 fragment: array_decl .

    $default  reduce using rule 55 (fragment)


State 28

   44 fragment: number .

    $default  reduce using rule 44 (fragment)


State 29

   43 fragment: fragment_or_variable .

    $default  reduce using rule 43 (fragment)


State 30

   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    pipeline              go to state 68
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 31

   31 key_values: . key_name
   32           | . key_name EQUALS fragment
   33           | . key_values COMMA key_name EQUALS fragment
   34           | . key_values COMMA key_name
   35 key_name: . fragment_or_variable
   36         | . QUESTION_MARK
   53 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    FRAGMENT       shift, and go to state 12
    VARIABLE       shift, and go to state 15
    QUESTION_MARK  shift, and go to state 69

    key_values            go to state 70
    key_name              go to state 71
    fragment_or_variable  go to state 72


State 32

   50 fragment: DOLLAR NUMBER .

    $default  reduce using rule 50 (fragment)


State 33

   24 assignment: DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   49 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, AT, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_AS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 73

    $default  reduce using rule 49 (fragment)


State 34

   51 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 51 (fragment)


State 35

   49 fragment: DOLLAR . VARIABLE
   50         | DOLLAR . NUMBER
   51         | DOLLAR . QUESTION_MARK
   52         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 30
    BEGIN_SQUARE   shift, and go to state 31
    NUMBER         shift, and go to state 32
    VARIABLE       shift, and go to state 74
    QUESTION_MARK  shift, and go to state 34


State 36

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   54         | BEGIN_PAREN . expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE
   84                     | BEGIN_PAREN . END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    END_PAREN      shift, and go to state 75
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 38
    function_declaration  go to state 39


State 37

   75 expression: fragment .

    $default  reduce using rule 75 (expression)


State 38

   54 fragment: BEGIN_PAREN expression . END_PAREN
   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 76
    BEGIN_PAREN  shift, and go to state 77
    END_PAREN    shift, and go to state 78
    ACCESS       shift, and go to state 79
    ADD          shift, and go to state 80
    MULTIPLY     shift, and go to state 81
    DIVIDE       shift, and go to state 82


State 39

   83 expression: function_declaration .

    $default  reduce using rule 83 (expression)


State 40

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   56 array_decl: AT BEGIN_PAREN . optional_whitespace END_PAREN
   57           | AT BEGIN_PAREN . array_def END_PAREN
   58           | AT BEGIN_PAREN . array_def COMMA optional_whitespace END_PAREN
   59 array_def: . array_element
   60          | . array_def COMMA array_element
   61 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 83
    array_def            go to state 84
    array_element        go to state 85


State 41

   25 assignment: COLON DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   49 fragment: DOLLAR . VARIABLE
   50         | DOLLAR . NUMBER
   51         | DOLLAR . QUESTION_MARK
   52         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 30
    BEGIN_SQUARE   shift, and go to state 31
    NUMBER         shift, and go to state 32
    VARIABLE       shift, and go to state 86
    QUESTION_MARK  shift, and go to state 34


State 42

   12 statement: COLON expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   26 assignment: COLON expression . ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON expression . ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 76
    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 87
    ADD          shift, and go to state 80
    MULTIPLY     shift, and go to state 81
    DIVIDE       shift, and go to state 82

    $default  reduce using rule 12 (statement)


State 43

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 44

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 45

   15 statement: KEYWORD_WHILE optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 88
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 46

   16 statement: KEYWORD_DO optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    BEGIN_BRACE  shift, and go to state 89


State 47

   17 statement: KEYWORD_FOREACH optional_whitespace . fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 90
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 48

   13 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 91
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 49

   18 statement: KEYWORD_RETURN WHITESPACE . expression
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 92
    function_declaration  go to state 39


State 50

    0 $accept: root $end .

    $default  accept


State 51

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 52

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 53

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statement             go to state 93
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 54

   29 pipeline: pipeline PIPE . instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    instruction           go to state 94
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 55

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 56

   39 arguments: arguments WHITESPACE . fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 95
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 57

   66 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 66 (keyword_as_string)


State 58

   69 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 69 (keyword_as_string)


State 59

   67 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 67 (keyword_as_string)


State 60

   68 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 68 (keyword_as_string)


State 61

   70 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 70 (keyword_as_string)


State 62

   71 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 71 (keyword_as_string)


State 63

   64 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 64 (keyword_as_string)


State 64

   65 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 65 (keyword_as_string)


State 65

   72 keyword_as_string: KEYWORD_AS .

    $default  reduce using rule 72 (keyword_as_string)


State 66

   41 fragments: fragments fragment .

    $default  reduce using rule 41 (fragments)


State 67

   42 fragments: fragments keyword_as_string .

    $default  reduce using rule 42 (fragments)


State 68

   29 pipeline: pipeline . PIPE instruction
   52 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 54
    END_PAREN  shift, and go to state 96


State 69

   36 key_name: QUESTION_MARK .

    $default  reduce using rule 36 (key_name)


State 70

   33 key_values: key_values . COMMA key_name EQUALS fragment
   34           | key_values . COMMA key_name
   53 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 97
    COMMA       shift, and go to state 98


State 71

   31 key_values: key_name .  [END_SQUARE, COMMA]
   32           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 99

    $default  reduce using rule 31 (key_values)


State 72

   35 key_name: fragment_or_variable .

    $default  reduce using rule 35 (key_name)


State 73

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   24 assignment: DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 100
    fragments                          go to state 101
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 102


State 74

   49 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 49 (fragment)


State 75

   84 function_declaration: BEGIN_PAREN END_PAREN . MAP BEGIN_BRACE statements END_BRACE

    MAP  shift, and go to state 103


State 76

   82 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 104


State 77

   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   77 expression: expression BEGIN_PAREN . END_PAREN
   78           | expression BEGIN_PAREN . comma_arguments END_PAREN
   85 comma_arguments: . fragments
   86                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 105
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 106
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    comma_arguments       go to state 107


State 78

   54 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 54 (fragment)


State 79

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   76           | expression ACCESS . expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 108
    function_declaration  go to state 39


State 80

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   81           | expression ADD . expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 109
    function_declaration  go to state 39


State 81

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   80           | expression MULTIPLY . expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 110
    function_declaration  go to state 39


State 82

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   79           | expression DIVIDE . expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 111
    function_declaration  go to state 39


State 83

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | AT BEGIN_PAREN optional_whitespace . END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   61 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | optional_whitespace . fragment optional_whitespace
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 112
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 113
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 84

   57 array_decl: AT BEGIN_PAREN array_def . END_PAREN
   58           | AT BEGIN_PAREN array_def . COMMA optional_whitespace END_PAREN
   60 array_def: array_def . COMMA array_element

    END_PAREN  shift, and go to state 114
    COMMA      shift, and go to state 115


State 85

   59 array_def: array_element .

    $default  reduce using rule 59 (array_def)


State 86

   25 assignment: COLON DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   49 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]

    EQUALS  shift, and go to state 116

    $default  reduce using rule 49 (fragment)


State 87

   26 assignment: COLON expression ACCESS . expression EQUALS fragments_or_function_declaration
   27           | COLON expression ACCESS . BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   76           | expression ACCESS . expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    BEGIN_SQUARE   shift, and go to state 117
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 118
    function_declaration  go to state 39


State 88

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 119


State 89

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 120
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 90

    6 optional_whitespace: .  [KEYWORD_AS]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment . optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 121


State 91

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 122


State 92

   18 statement: KEYWORD_RETURN WHITESPACE expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 76
    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 79
    ADD          shift, and go to state 80
    MULTIPLY     shift, and go to state 81
    DIVIDE       shift, and go to state 82

    $default  reduce using rule 18 (statement)


State 93

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 94

   29 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 29 (pipeline)


State 95

   39 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   41 fragments: fragments . fragment
   42          | fragments . keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   64 keyword_as_string: . KEYWORD_IF
   65                  | . KEYWORD_ELSE
   66                  | . KEYWORD_WHILE
   67                  | . KEYWORD_FOR
   68                  | . KEYWORD_FOREACH
   69                  | . KEYWORD_DO
   70                  | . KEYWORD_BREAK
   71                  | . KEYWORD_CONTINUE
   72                  | . KEYWORD_AS
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR            shift, and go to state 35
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 57
    KEYWORD_DO        shift, and go to state 58
    KEYWORD_FOR       shift, and go to state 59
    KEYWORD_FOREACH   shift, and go to state 60
    KEYWORD_BREAK     shift, and go to state 61
    KEYWORD_CONTINUE  shift, and go to state 62
    KEYWORD_IF        shift, and go to state 63
    KEYWORD_ELSE      shift, and go to state 64
    KEYWORD_AS        shift, and go to state 65
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 39 (arguments)

    fragment              go to state 66
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 67
    fragment_or_variable  go to state 29


State 96

   52 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 52 (fragment)


State 97

   53 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 123


State 98

   33 key_values: key_values COMMA . key_name EQUALS fragment
   34           | key_values COMMA . key_name
   35 key_name: . fragment_or_variable
   36         | . QUESTION_MARK
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    FRAGMENT       shift, and go to state 12
    VARIABLE       shift, and go to state 15
    QUESTION_MARK  shift, and go to state 69

    key_name              go to state 124
    fragment_or_variable  go to state 72


State 99

   32 key_values: key_name EQUALS . fragment
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 125
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 100

   24 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 24 (assignment)


State 101

   22 fragments_or_function_declaration: fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   41 fragments: fragments . fragment
   42          | fragments . keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   64 keyword_as_string: . KEYWORD_IF
   65                  | . KEYWORD_ELSE
   66                  | . KEYWORD_WHILE
   67                  | . KEYWORD_FOR
   68                  | . KEYWORD_FOREACH
   69                  | . KEYWORD_DO
   70                  | . KEYWORD_BREAK
   71                  | . KEYWORD_CONTINUE
   72                  | . KEYWORD_AS
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR            shift, and go to state 35
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 57
    KEYWORD_DO        shift, and go to state 58
    KEYWORD_FOR       shift, and go to state 59
    KEYWORD_FOREACH   shift, and go to state 60
    KEYWORD_BREAK     shift, and go to state 61
    KEYWORD_CONTINUE  shift, and go to state 62
    KEYWORD_IF        shift, and go to state 63
    KEYWORD_ELSE      shift, and go to state 64
    KEYWORD_AS        shift, and go to state 65
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 22 (fragments_or_function_declaration)

    fragment              go to state 66
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 67
    fragment_or_variable  go to state 29


State 102

   23 fragments_or_function_declaration: function_declaration .

    $default  reduce using rule 23 (fragments_or_function_declaration)


State 103

   84 function_declaration: BEGIN_PAREN END_PAREN MAP . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 126


State 104

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   75 expression: . fragment
   76           | . expression ACCESS expression
   77           | . expression BEGIN_PAREN END_PAREN
   78           | . expression BEGIN_PAREN comma_arguments END_PAREN
   79           | . expression DIVIDE expression
   80           | . expression MULTIPLY expression
   81           | . expression ADD expression
   82           | . expression WHITESPACE MINUS expression
   82           | expression WHITESPACE MINUS . expression
   83           | . function_declaration
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 37
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 127
    function_declaration  go to state 39


State 105

   77 expression: expression BEGIN_PAREN END_PAREN .

    $default  reduce using rule 77 (expression)


State 106

   41 fragments: fragments . fragment
   42          | fragments . keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   64 keyword_as_string: . KEYWORD_IF
   65                  | . KEYWORD_ELSE
   66                  | . KEYWORD_WHILE
   67                  | . KEYWORD_FOR
   68                  | . KEYWORD_FOREACH
   69                  | . KEYWORD_DO
   70                  | . KEYWORD_BREAK
   71                  | . KEYWORD_CONTINUE
   72                  | . KEYWORD_AS
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   85 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 35
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 57
    KEYWORD_DO        shift, and go to state 58
    KEYWORD_FOR       shift, and go to state 59
    KEYWORD_FOREACH   shift, and go to state 60
    KEYWORD_BREAK     shift, and go to state 61
    KEYWORD_CONTINUE  shift, and go to state 62
    KEYWORD_IF        shift, and go to state 63
    KEYWORD_ELSE      shift, and go to state 64
    KEYWORD_AS        shift, and go to state 65
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 85 (comma_arguments)

    fragment              go to state 66
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 67
    fragment_or_variable  go to state 29


State 107

   78 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   86 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 128
    COMMA      shift, and go to state 129


State 108

   76 expression: expression . ACCESS expression
   76           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 76 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 76 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 76 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 76 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 76 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 109

   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   81           | expression ADD expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]
   82           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 79
    MULTIPLY     shift, and go to state 81
    DIVIDE       shift, and go to state 82

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 81 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 81 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 81 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 81 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 81 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 110

   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   80           | expression MULTIPLY expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 79

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 80 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 80 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 80 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 80 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 80 and token DIVIDE resolved as reduce (%left DIVIDE).


State 111

   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   79           | expression DIVIDE expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 79

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 79 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 79 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 79 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 79 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 79 and token DIVIDE resolved as reduce (%left DIVIDE).


State 112

   56 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN .

    $default  reduce using rule 56 (array_decl)


State 113

    6 optional_whitespace: .  [END_PAREN, COMMA, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   61 array_element: optional_whitespace fragment . optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 130


State 114

   57 array_decl: AT BEGIN_PAREN array_def END_PAREN .

    $default  reduce using rule 57 (array_decl)


State 115

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   58 array_decl: AT BEGIN_PAREN array_def COMMA . optional_whitespace END_PAREN
   60 array_def: array_def COMMA . array_element
   61 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 131
    array_element        go to state 132


State 116

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   25 assignment: COLON DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 133
    fragments                          go to state 101
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 102


State 117

   27 assignment: COLON expression ACCESS BEGIN_SQUARE . END_SQUARE EQUALS fragments_or_function_declaration

    END_SQUARE  shift, and go to state 134


State 118

   26 assignment: COLON expression ACCESS expression . EQUALS fragments_or_function_declaration
   76 expression: expression . ACCESS expression
   76           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression

    EQUALS  shift, and go to state 135

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 76 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 76 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 76 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 76 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 76 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 119

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 136


State 120

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_WHILE optional_whitespace fragment

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 137
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 121

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace . KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    KEYWORD_AS  shift, and go to state 138


State 122

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 139


State 123

   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    pipeline              go to state 140
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 124

   33 key_values: key_values COMMA key_name . EQUALS fragment
   34           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 141

    $default  reduce using rule 34 (key_values)


State 125

   32 key_values: key_name EQUALS fragment .

    $default  reduce using rule 32 (key_values)


State 126

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   84 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE . statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 142
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 127

   76 expression: expression . ACCESS expression
   77           | expression . BEGIN_PAREN END_PAREN
   78           | expression . BEGIN_PAREN comma_arguments END_PAREN
   79           | expression . DIVIDE expression
   80           | expression . MULTIPLY expression
   81           | expression . ADD expression
   82           | expression . WHITESPACE MINUS expression
   82           | expression WHITESPACE MINUS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]

    BEGIN_PAREN  shift, and go to state 77
    ACCESS       shift, and go to state 79
    MULTIPLY     shift, and go to state 81
    DIVIDE       shift, and go to state 82

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 82 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 82 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 82 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 82 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 82 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 128

   78 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 78 (expression)


State 129

   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   86 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 143
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 130

   61 array_element: optional_whitespace fragment optional_whitespace . MAP optional_whitespace fragment optional_whitespace
   62              | optional_whitespace fragment optional_whitespace .  [END_PAREN, COMMA]

    MAP  shift, and go to state 144

    $default  reduce using rule 62 (array_element)


State 131

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   58           | AT BEGIN_PAREN array_def COMMA optional_whitespace . END_PAREN
   61 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   62              | optional_whitespace . fragment optional_whitespace
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 145
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 113
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 132

   60 array_def: array_def COMMA array_element .

    $default  reduce using rule 60 (array_def)


State 133

   25 assignment: COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 25 (assignment)


State 134

   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE . EQUALS fragments_or_function_declaration

    EQUALS  shift, and go to state 146


State 135

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   26 assignment: COLON expression ACCESS expression EQUALS . fragments_or_function_declaration
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 147
    fragments                          go to state 101
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 102


State 136

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 148
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 137

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_WHILE optional_whitespace fragment

    KEYWORD_WHILE  shift, and go to state 149


State 138

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS . optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 150


State 139

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 151
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 140

   29 pipeline: pipeline . PIPE instruction
   53 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 54
    END_PAREN  shift, and go to state 152


State 141

   33 key_values: key_values COMMA key_name EQUALS . fragment
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 153
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 142

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   84 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 154
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 143

   41 fragments: fragments . fragment
   42          | fragments . keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   64 keyword_as_string: . KEYWORD_IF
   65                  | . KEYWORD_ELSE
   66                  | . KEYWORD_WHILE
   67                  | . KEYWORD_FOR
   68                  | . KEYWORD_FOREACH
   69                  | . KEYWORD_DO
   70                  | . KEYWORD_BREAK
   71                  | . KEYWORD_CONTINUE
   72                  | . KEYWORD_AS
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   86 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 35
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 57
    KEYWORD_DO        shift, and go to state 58
    KEYWORD_FOR       shift, and go to state 59
    KEYWORD_FOREACH   shift, and go to state 60
    KEYWORD_BREAK     shift, and go to state 61
    KEYWORD_CONTINUE  shift, and go to state 62
    KEYWORD_IF        shift, and go to state 63
    KEYWORD_ELSE      shift, and go to state 64
    KEYWORD_AS        shift, and go to state 65
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 86 (comma_arguments)

    fragment              go to state 66
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 67
    fragment_or_variable  go to state 29


State 144

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   61 array_element: optional_whitespace fragment optional_whitespace MAP . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 155


State 145

   58 array_decl: AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN .

    $default  reduce using rule 58 (array_decl)


State 146

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS . fragments_or_function_declaration
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE
   84 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 36
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 156
    fragments                          go to state 101
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 102


State 147

   26 assignment: COLON expression ACCESS expression EQUALS fragments_or_function_declaration .

    $default  reduce using rule 26 (assignment)


State 148

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 157
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 149

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE . optional_whitespace fragment

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 158


State 150

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace . mapping BEGIN_BRACE statements END_BRACE
   20 mapping: . DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 159

    mapping  go to state 160


State 151

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 161
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 152

   53 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 53 (fragment)


State 153

   33 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 33 (key_values)


State 154

   84 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 84 (function_declaration)


State 155

   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   61 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace . fragment optional_whitespace
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 162
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 156

   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 27 (assignment)


State 157

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 15 (statement)


State 158

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace . fragment
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR         shift, and go to state 35
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 163
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 159

   20 mapping: DOLLAR . VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 164


State 160

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 165


State 161

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 166

    $default  reduce using rule 14 (statement)


State 162

    6 optional_whitespace: .  [END_PAREN, COMMA]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   61 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 167


State 163

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment .

    $default  reduce using rule 16 (statement)


State 164

    6 optional_whitespace: .  [BEGIN_BRACE, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE . optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 168


State 165

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE . statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 169
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 166

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 170


State 167

   61 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace .

    $default  reduce using rule 61 (array_element)


State 168

   20 mapping: DOLLAR VARIABLE optional_whitespace . MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE optional_whitespace .  [BEGIN_BRACE]

    MAP  shift, and go to state 171

    $default  reduce using rule 21 (mapping)


State 169

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 172
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 170

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   37 command: . arguments
   38 arguments: . fragments
   39          | . arguments WHITESPACE fragments
   40 fragments: . fragment
   41          | . fragments fragment
   42          | . fragments keyword_as_string
   43 fragment: . fragment_or_variable
   44         | . number
   45         | . MINUS
   46         | . PHP
   47         | . SINGLE_QUOTED
   48         | . DOUBLE_QUOTED
   49         | . DOLLAR VARIABLE
   50         | . DOLLAR NUMBER
   51         | . DOLLAR QUESTION_MARK
   52         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | . BEGIN_PAREN expression END_PAREN
   55         | . array_decl
   56 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | . AT BEGIN_PAREN array_def END_PAREN
   58           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   63 number: . NUMBER
   73 fragment_or_variable: . FRAGMENT
   74                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 173
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 171

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE optional_whitespace MAP . optional_whitespace DOLLAR VARIABLE optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 174


State 172

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 17 (statement)


State 173

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 51
    END_BRACE            shift, and go to state 175
    SEMICOLON            shift, and go to state 52

    terminator  go to state 53


State 174

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 176


State 175

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 13 (statement)


State 176

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 177


State 177

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 43
    TERMINATING_NEWLINE  shift, and go to state 44

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 178


State 178

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace .

    $default  reduce using rule 20 (mapping)
