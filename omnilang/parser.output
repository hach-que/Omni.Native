Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR
   MAP


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | /* empty */

   15 assignment: DOLLAR VARIABLE EQUALS fragments

   16 pipeline: instruction
   17         | pipeline PIPE instruction

   18 instruction: command

   19 key_values: key_name
   20           | key_name EQUALS fragment
   21           | key_values COMMA key_name EQUALS fragment
   22           | key_values COMMA key_name

   23 key_name: fragment_or_variable
   24         | QUESTION_MARK

   25 command: arguments

   26 arguments: fragments
   27          | arguments WHITESPACE fragments

   28 fragments: fragment
   29          | fragments fragment
   30          | fragments keyword_as_string

   31 fragment: fragment_or_variable
   32         | number
   33         | MINUS
   34         | PHP
   35         | SINGLE_QUOTED
   36         | DOUBLE_QUOTED
   37         | DOLLAR VARIABLE
   38         | DOLLAR NUMBER
   39         | DOLLAR QUESTION_MARK
   40         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | BEGIN_PAREN expression END_PAREN

   43 number: NUMBER

   44 keyword_as_string: KEYWORD_IF
   45                  | KEYWORD_ELSE
   46                  | KEYWORD_WHILE
   47                  | KEYWORD_FOR
   48                  | KEYWORD_FOREACH
   49                  | KEYWORD_DO
   50                  | KEYWORD_BREAK
   51                  | KEYWORD_CONTINUE

   52 fragment_or_variable: FRAGMENT
   53                     | VARIABLE

   54 expression: fragment
   55           | expression ACCESS expression
   56           | expression BEGIN_PAREN comma_arguments END_PAREN
   57           | expression DIVIDE expression
   58           | expression MULTIPLY expression
   59           | expression ADD expression
   60           | expression WHITESPACE MINUS expression

   61 comma_arguments: fragments
   62                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 27 60
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 17
PERCENT (263)
DOLLAR (264) 15 37 38 39 40 41
BEGIN_PAREN (265) 40 41 42 56
END_PAREN (266) 40 41 42 56
EQUALS (267) 15 20 21
BEGIN_SQUARE (268) 41
END_SQUARE (269) 41
BEGIN_BRACE (270) 12 13
END_BRACE (271) 12 13
COMMA (272) 21 22 62
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 55
MAP (278)
MINUS (279) 33 60
ADD (280) 59
MULTIPLY (281) 58
DIVIDE (282) 57
KEYWORD_WHILE (283) 46
KEYWORD_DO (284) 49
KEYWORD_FOR (285) 47
KEYWORD_FOREACH (286) 48
KEYWORD_BREAK (287) 50
KEYWORD_CONTINUE (288) 51
KEYWORD_IF (289) 12 13 44
KEYWORD_ELSE (290) 12 45
NUMBER (291) 38 43
FRAGMENT (292) 52
SINGLE_QUOTED (293) 35
DOUBLE_QUOTED (294) 36
VARIABLE (295) 15 37 53
QUESTION_MARK (296) 24 39
PHP (297) 34


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
root (44)
    on left: 1, on right: 0
statements (45)
    on left: 2 3, on right: 1 3 12 13
terminator (46)
    on left: 4 5, on right: 3
optional_whitespace (47)
    on left: 6 7 8, on right: 12 13
statement (48)
    on left: 9 10 11 12 13 14, on right: 2 3
assignment (49)
    on left: 15, on right: 11
pipeline (50)
    on left: 16 17, on right: 9 10 17 40 41
instruction (51)
    on left: 18, on right: 16 17
key_values (52)
    on left: 19 20 21 22, on right: 21 22 41
key_name (53)
    on left: 23 24, on right: 19 20 21 22
command (54)
    on left: 25, on right: 18
arguments (55)
    on left: 26 27, on right: 25 27
fragments (56)
    on left: 28 29 30, on right: 15 26 27 29 30 61 62
fragment (57)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42, on right: 12 13 20
    21 28 29 54
number (58)
    on left: 43, on right: 32
keyword_as_string (59)
    on left: 44 45 46 47 48 49 50 51, on right: 30
fragment_or_variable (60)
    on left: 52 53, on right: 23 31
expression (61)
    on left: 54 55 56 57 58 59 60, on right: 42 55 56 57 58 59 60
comma_arguments (62)
    on left: 61 62, on right: 56 62


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   15 assignment: . DOLLAR VARIABLE EQUALS fragments
   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 1
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    KEYWORD_IF     shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    $default  reduce using rule 14 (statement)

    root                  go to state 11
    statements            go to state 12
    statement             go to state 13
    assignment            go to state 14
    pipeline              go to state 15
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 1

   15 assignment: DOLLAR . VARIABLE EQUALS fragments
   37 fragment: DOLLAR . VARIABLE
   38         | DOLLAR . NUMBER
   39         | DOLLAR . QUESTION_MARK
   40         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   41         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 23
    BEGIN_SQUARE   shift, and go to state 24
    NUMBER         shift, and go to state 25
    VARIABLE       shift, and go to state 26
    QUESTION_MARK  shift, and go to state 27


State 2

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   42         | BEGIN_PAREN . expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   58           | . expression MULTIPLY expression
   59           | . expression ADD expression
   60           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 30


State 3

   33 fragment: MINUS .

    $default  reduce using rule 33 (fragment)


State 4

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   12 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 31
    TERMINATING_NEWLINE  shift, and go to state 32

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 33


State 5

   43 number: NUMBER .

    $default  reduce using rule 43 (number)


State 6

   52 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 52 (fragment_or_variable)


State 7

   35 fragment: SINGLE_QUOTED .

    $default  reduce using rule 35 (fragment)


State 8

   36 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 36 (fragment)


State 9

   53 fragment_or_variable: VARIABLE .

    $default  reduce using rule 53 (fragment_or_variable)


State 10

   34 fragment: PHP .

    $default  reduce using rule 34 (fragment)


State 11

    0 $accept: root . $end

    $end  shift, and go to state 34


State 12

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 35
    SEMICOLON            shift, and go to state 36

    $default  reduce using rule 1 (root)

    terminator  go to state 37


State 13

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 14

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 15

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   17 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 38
    AMPERSAND  shift, and go to state 39

    $default  reduce using rule 10 (statement)


State 16

   16 pipeline: instruction .

    $default  reduce using rule 16 (pipeline)


State 17

   18 instruction: command .

    $default  reduce using rule 18 (instruction)


State 18

   25 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   27 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 40

    $default  reduce using rule 25 (command)


State 19

   26 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   29 fragments: fragments . fragment
   30          | fragments . keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   44 keyword_as_string: . KEYWORD_IF
   45                  | . KEYWORD_ELSE
   46                  | . KEYWORD_WHILE
   47                  | . KEYWORD_FOR
   48                  | . KEYWORD_FOREACH
   49                  | . KEYWORD_DO
   50                  | . KEYWORD_BREAK
   51                  | . KEYWORD_CONTINUE
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR            shift, and go to state 28
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 41
    KEYWORD_DO        shift, and go to state 42
    KEYWORD_FOR       shift, and go to state 43
    KEYWORD_FOREACH   shift, and go to state 44
    KEYWORD_BREAK     shift, and go to state 45
    KEYWORD_CONTINUE  shift, and go to state 46
    KEYWORD_IF        shift, and go to state 47
    KEYWORD_ELSE      shift, and go to state 48
    NUMBER            shift, and go to state 5
    FRAGMENT          shift, and go to state 6
    SINGLE_QUOTED     shift, and go to state 7
    DOUBLE_QUOTED     shift, and go to state 8
    VARIABLE          shift, and go to state 9
    PHP               shift, and go to state 10

    $default  reduce using rule 26 (arguments)

    fragment              go to state 49
    number                go to state 21
    keyword_as_string     go to state 50
    fragment_or_variable  go to state 22


State 20

   28 fragments: fragment .

    $default  reduce using rule 28 (fragments)


State 21

   32 fragment: number .

    $default  reduce using rule 32 (fragment)


State 22

   31 fragment: fragment_or_variable .

    $default  reduce using rule 31 (fragment)


State 23

   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   40         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    pipeline              go to state 51
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 24

   19 key_values: . key_name
   20           | . key_name EQUALS fragment
   21           | . key_values COMMA key_name EQUALS fragment
   22           | . key_values COMMA key_name
   23 key_name: . fragment_or_variable
   24         | . QUESTION_MARK
   41 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    FRAGMENT       shift, and go to state 6
    VARIABLE       shift, and go to state 9
    QUESTION_MARK  shift, and go to state 52

    key_values            go to state 53
    key_name              go to state 54
    fragment_or_variable  go to state 55


State 25

   38 fragment: DOLLAR NUMBER .

    $default  reduce using rule 38 (fragment)


State 26

   15 assignment: DOLLAR VARIABLE . EQUALS fragments
   37 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 56

    $default  reduce using rule 37 (fragment)


State 27

   39 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 39 (fragment)


State 28

   37 fragment: DOLLAR . VARIABLE
   38         | DOLLAR . NUMBER
   39         | DOLLAR . QUESTION_MARK
   40         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   41         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 23
    BEGIN_SQUARE   shift, and go to state 24
    NUMBER         shift, and go to state 25
    VARIABLE       shift, and go to state 57
    QUESTION_MARK  shift, and go to state 27


State 29

   54 expression: fragment .

    $default  reduce using rule 54 (expression)


State 30

   42 fragment: BEGIN_PAREN expression . END_PAREN
   55 expression: expression . ACCESS expression
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   58           | expression . MULTIPLY expression
   59           | expression . ADD expression
   60           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 58
    BEGIN_PAREN  shift, and go to state 59
    END_PAREN    shift, and go to state 60
    ACCESS       shift, and go to state 61
    ADD          shift, and go to state 62
    MULTIPLY     shift, and go to state 63
    DIVIDE       shift, and go to state 64


State 31

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 32

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 33

   12 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 65
    number                go to state 21
    fragment_or_variable  go to state 22


State 34

    0 $accept: root $end .

    $default  accept


State 35

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 36

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 37

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   15 assignment: . DOLLAR VARIABLE EQUALS fragments
   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 1
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    KEYWORD_IF     shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    $default  reduce using rule 14 (statement)

    statement             go to state 66
    assignment            go to state 14
    pipeline              go to state 15
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 38

   17 pipeline: pipeline PIPE . instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    instruction           go to state 67
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 39

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 40

   27 arguments: arguments WHITESPACE . fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragments             go to state 68
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 41

   46 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 46 (keyword_as_string)


State 42

   49 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 49 (keyword_as_string)


State 43

   47 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 47 (keyword_as_string)


State 44

   48 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 48 (keyword_as_string)


State 45

   50 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 50 (keyword_as_string)


State 46

   51 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 51 (keyword_as_string)


State 47

   44 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 44 (keyword_as_string)


State 48

   45 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 45 (keyword_as_string)


State 49

   29 fragments: fragments fragment .

    $default  reduce using rule 29 (fragments)


State 50

   30 fragments: fragments keyword_as_string .

    $default  reduce using rule 30 (fragments)


State 51

   17 pipeline: pipeline . PIPE instruction
   40 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 38
    END_PAREN  shift, and go to state 69


State 52

   24 key_name: QUESTION_MARK .

    $default  reduce using rule 24 (key_name)


State 53

   21 key_values: key_values . COMMA key_name EQUALS fragment
   22           | key_values . COMMA key_name
   41 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 70
    COMMA       shift, and go to state 71


State 54

   19 key_values: key_name .  [END_SQUARE, COMMA]
   20           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 72

    $default  reduce using rule 19 (key_values)


State 55

   23 key_name: fragment_or_variable .

    $default  reduce using rule 23 (key_name)


State 56

   15 assignment: DOLLAR VARIABLE EQUALS . fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragments             go to state 73
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 57

   37 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 37 (fragment)


State 58

   60 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 74


State 59

   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   56 expression: expression BEGIN_PAREN . comma_arguments END_PAREN
   61 comma_arguments: . fragments
   62                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragments             go to state 75
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22
    comma_arguments       go to state 76


State 60

   42 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 42 (fragment)


State 61

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   55           | expression ACCESS . expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   58           | . expression MULTIPLY expression
   59           | . expression ADD expression
   60           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 77


State 62

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   58           | . expression MULTIPLY expression
   59           | . expression ADD expression
   59           | expression ADD . expression
   60           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 78


State 63

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   58           | . expression MULTIPLY expression
   58           | expression MULTIPLY . expression
   59           | . expression ADD expression
   60           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 79


State 64

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   57           | expression DIVIDE . expression
   58           | . expression MULTIPLY expression
   59           | . expression ADD expression
   60           | . expression WHITESPACE MINUS expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 80


State 65

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   12 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 31
    TERMINATING_NEWLINE  shift, and go to state 32

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 81


State 66

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 67

   17 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 17 (pipeline)


State 68

   27 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   29 fragments: fragments . fragment
   30          | fragments . keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   44 keyword_as_string: . KEYWORD_IF
   45                  | . KEYWORD_ELSE
   46                  | . KEYWORD_WHILE
   47                  | . KEYWORD_FOR
   48                  | . KEYWORD_FOREACH
   49                  | . KEYWORD_DO
   50                  | . KEYWORD_BREAK
   51                  | . KEYWORD_CONTINUE
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR            shift, and go to state 28
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 41
    KEYWORD_DO        shift, and go to state 42
    KEYWORD_FOR       shift, and go to state 43
    KEYWORD_FOREACH   shift, and go to state 44
    KEYWORD_BREAK     shift, and go to state 45
    KEYWORD_CONTINUE  shift, and go to state 46
    KEYWORD_IF        shift, and go to state 47
    KEYWORD_ELSE      shift, and go to state 48
    NUMBER            shift, and go to state 5
    FRAGMENT          shift, and go to state 6
    SINGLE_QUOTED     shift, and go to state 7
    DOUBLE_QUOTED     shift, and go to state 8
    VARIABLE          shift, and go to state 9
    PHP               shift, and go to state 10

    $default  reduce using rule 27 (arguments)

    fragment              go to state 49
    number                go to state 21
    keyword_as_string     go to state 50
    fragment_or_variable  go to state 22


State 69

   40 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 40 (fragment)


State 70

   41 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 82


State 71

   21 key_values: key_values COMMA . key_name EQUALS fragment
   22           | key_values COMMA . key_name
   23 key_name: . fragment_or_variable
   24         | . QUESTION_MARK
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    FRAGMENT       shift, and go to state 6
    VARIABLE       shift, and go to state 9
    QUESTION_MARK  shift, and go to state 52

    key_name              go to state 83
    fragment_or_variable  go to state 55


State 72

   20 key_values: key_name EQUALS . fragment
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 84
    number                go to state 21
    fragment_or_variable  go to state 22


State 73

   15 assignment: DOLLAR VARIABLE EQUALS fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   29 fragments: fragments . fragment
   30          | fragments . keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   44 keyword_as_string: . KEYWORD_IF
   45                  | . KEYWORD_ELSE
   46                  | . KEYWORD_WHILE
   47                  | . KEYWORD_FOR
   48                  | . KEYWORD_FOREACH
   49                  | . KEYWORD_DO
   50                  | . KEYWORD_BREAK
   51                  | . KEYWORD_CONTINUE
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR            shift, and go to state 28
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 41
    KEYWORD_DO        shift, and go to state 42
    KEYWORD_FOR       shift, and go to state 43
    KEYWORD_FOREACH   shift, and go to state 44
    KEYWORD_BREAK     shift, and go to state 45
    KEYWORD_CONTINUE  shift, and go to state 46
    KEYWORD_IF        shift, and go to state 47
    KEYWORD_ELSE      shift, and go to state 48
    NUMBER            shift, and go to state 5
    FRAGMENT          shift, and go to state 6
    SINGLE_QUOTED     shift, and go to state 7
    DOUBLE_QUOTED     shift, and go to state 8
    VARIABLE          shift, and go to state 9
    PHP               shift, and go to state 10

    $default  reduce using rule 15 (assignment)

    fragment              go to state 49
    number                go to state 21
    keyword_as_string     go to state 50
    fragment_or_variable  go to state 22


State 74

   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   54 expression: . fragment
   55           | . expression ACCESS expression
   56           | . expression BEGIN_PAREN comma_arguments END_PAREN
   57           | . expression DIVIDE expression
   58           | . expression MULTIPLY expression
   59           | . expression ADD expression
   60           | . expression WHITESPACE MINUS expression
   60           | expression WHITESPACE MINUS . expression

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 29
    number                go to state 21
    fragment_or_variable  go to state 22
    expression            go to state 85


State 75

   29 fragments: fragments . fragment
   30          | fragments . keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   44 keyword_as_string: . KEYWORD_IF
   45                  | . KEYWORD_ELSE
   46                  | . KEYWORD_WHILE
   47                  | . KEYWORD_FOR
   48                  | . KEYWORD_FOREACH
   49                  | . KEYWORD_DO
   50                  | . KEYWORD_BREAK
   51                  | . KEYWORD_CONTINUE
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   61 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 28
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 41
    KEYWORD_DO        shift, and go to state 42
    KEYWORD_FOR       shift, and go to state 43
    KEYWORD_FOREACH   shift, and go to state 44
    KEYWORD_BREAK     shift, and go to state 45
    KEYWORD_CONTINUE  shift, and go to state 46
    KEYWORD_IF        shift, and go to state 47
    KEYWORD_ELSE      shift, and go to state 48
    NUMBER            shift, and go to state 5
    FRAGMENT          shift, and go to state 6
    SINGLE_QUOTED     shift, and go to state 7
    DOUBLE_QUOTED     shift, and go to state 8
    VARIABLE          shift, and go to state 9
    PHP               shift, and go to state 10

    $default  reduce using rule 61 (comma_arguments)

    fragment              go to state 49
    number                go to state 21
    keyword_as_string     go to state 50
    fragment_or_variable  go to state 22


State 76

   56 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   62 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 86
    COMMA      shift, and go to state 87


State 77

   55 expression: expression . ACCESS expression
   55           | expression ACCESS expression .  [WHITESPACE, BEGIN_PAREN, END_PAREN, ADD, MULTIPLY, DIVIDE]
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   58           | expression . MULTIPLY expression
   59           | expression . ADD expression
   60           | expression . WHITESPACE MINUS expression

    ACCESS  error (nonassociative)

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 55 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 55 and token ACCESS resolved as an error (%nonassoc ACCESS).
    Conflict between rule 55 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 55 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 55 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 78

   55 expression: expression . ACCESS expression
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   58           | expression . MULTIPLY expression
   59           | expression . ADD expression
   59           | expression ADD expression .  [WHITESPACE, END_PAREN, ADD]
   60           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 59
    ACCESS       shift, and go to state 61
    MULTIPLY     shift, and go to state 63
    DIVIDE       shift, and go to state 64

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 59 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 59 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 59 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 59 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 59 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 79

   55 expression: expression . ACCESS expression
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   58           | expression . MULTIPLY expression
   58           | expression MULTIPLY expression .  [WHITESPACE, END_PAREN, ADD, MULTIPLY, DIVIDE]
   59           | expression . ADD expression
   60           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 59
    ACCESS       shift, and go to state 61

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 58 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 58 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 58 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 58 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 58 and token DIVIDE resolved as reduce (%left DIVIDE).


State 80

   55 expression: expression . ACCESS expression
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   57           | expression DIVIDE expression .  [WHITESPACE, END_PAREN, ADD, MULTIPLY, DIVIDE]
   58           | expression . MULTIPLY expression
   59           | expression . ADD expression
   60           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 59
    ACCESS       shift, and go to state 61

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 57 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 57 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 57 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 57 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 57 and token DIVIDE resolved as reduce (%left DIVIDE).


State 81

   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 88


State 82

   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   41         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    pipeline              go to state 89
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 83

   21 key_values: key_values COMMA key_name . EQUALS fragment
   22           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 90

    $default  reduce using rule 22 (key_values)


State 84

   20 key_values: key_name EQUALS fragment .

    $default  reduce using rule 20 (key_values)


State 85

   55 expression: expression . ACCESS expression
   56           | expression . BEGIN_PAREN comma_arguments END_PAREN
   57           | expression . DIVIDE expression
   58           | expression . MULTIPLY expression
   59           | expression . ADD expression
   60           | expression . WHITESPACE MINUS expression
   60           | expression WHITESPACE MINUS expression .  [WHITESPACE, END_PAREN, ADD]

    BEGIN_PAREN  shift, and go to state 59
    ACCESS       shift, and go to state 61
    MULTIPLY     shift, and go to state 63
    DIVIDE       shift, and go to state 64

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 60 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 60 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 60 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 60 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 60 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 86

   56 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 56 (expression)


State 87

   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   62 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragments             go to state 91
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 88

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   12          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   14          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   15 assignment: . DOLLAR VARIABLE EQUALS fragments
   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 1
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    KEYWORD_IF     shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    $default  reduce using rule 14 (statement)

    statements            go to state 92
    statement             go to state 13
    assignment            go to state 14
    pipeline              go to state 15
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 89

   17 pipeline: pipeline . PIPE instruction
   41 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 38
    END_PAREN  shift, and go to state 93


State 90

   21 key_values: key_values COMMA key_name EQUALS . fragment
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 28
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    fragment              go to state 94
    number                go to state 21
    fragment_or_variable  go to state 22


State 91

   29 fragments: fragments . fragment
   30          | fragments . keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   44 keyword_as_string: . KEYWORD_IF
   45                  | . KEYWORD_ELSE
   46                  | . KEYWORD_WHILE
   47                  | . KEYWORD_FOR
   48                  | . KEYWORD_FOREACH
   49                  | . KEYWORD_DO
   50                  | . KEYWORD_BREAK
   51                  | . KEYWORD_CONTINUE
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE
   62 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 28
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 41
    KEYWORD_DO        shift, and go to state 42
    KEYWORD_FOR       shift, and go to state 43
    KEYWORD_FOREACH   shift, and go to state 44
    KEYWORD_BREAK     shift, and go to state 45
    KEYWORD_CONTINUE  shift, and go to state 46
    KEYWORD_IF        shift, and go to state 47
    KEYWORD_ELSE      shift, and go to state 48
    NUMBER            shift, and go to state 5
    FRAGMENT          shift, and go to state 6
    SINGLE_QUOTED     shift, and go to state 7
    DOUBLE_QUOTED     shift, and go to state 8
    VARIABLE          shift, and go to state 9
    PHP               shift, and go to state 10

    $default  reduce using rule 62 (comma_arguments)

    fragment              go to state 49
    number                go to state 21
    keyword_as_string     go to state 50
    fragment_or_variable  go to state 22


State 92

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 35
    END_BRACE            shift, and go to state 95
    SEMICOLON            shift, and go to state 36

    terminator  go to state 37


State 93

   41 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 41 (fragment)


State 94

   21 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 21 (key_values)


State 95

   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 96

    $default  reduce using rule 13 (statement)


State 96

   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 97


State 97

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   12          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   15 assignment: . DOLLAR VARIABLE EQUALS fragments
   16 pipeline: . instruction
   17         | . pipeline PIPE instruction
   18 instruction: . command
   25 command: . arguments
   26 arguments: . fragments
   27          | . arguments WHITESPACE fragments
   28 fragments: . fragment
   29          | . fragments fragment
   30          | . fragments keyword_as_string
   31 fragment: . fragment_or_variable
   32         | . number
   33         | . MINUS
   34         | . PHP
   35         | . SINGLE_QUOTED
   36         | . DOUBLE_QUOTED
   37         | . DOLLAR VARIABLE
   38         | . DOLLAR NUMBER
   39         | . DOLLAR QUESTION_MARK
   40         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   41         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   42         | . BEGIN_PAREN expression END_PAREN
   43 number: . NUMBER
   52 fragment_or_variable: . FRAGMENT
   53                     | . VARIABLE

    DOLLAR         shift, and go to state 1
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    KEYWORD_IF     shift, and go to state 4
    NUMBER         shift, and go to state 5
    FRAGMENT       shift, and go to state 6
    SINGLE_QUOTED  shift, and go to state 7
    DOUBLE_QUOTED  shift, and go to state 8
    VARIABLE       shift, and go to state 9
    PHP            shift, and go to state 10

    $default  reduce using rule 14 (statement)

    statements            go to state 98
    statement             go to state 13
    assignment            go to state 14
    pipeline              go to state 15
    instruction           go to state 16
    command               go to state 17
    arguments             go to state 18
    fragments             go to state 19
    fragment              go to state 20
    number                go to state 21
    fragment_or_variable  go to state 22


State 98

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 35
    END_BRACE            shift, and go to state 99
    SEMICOLON            shift, and go to state 36

    terminator  go to state 37


State 99

   12 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 12 (statement)
