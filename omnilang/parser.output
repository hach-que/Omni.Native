Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR
   UNTERMINATED_LEXING_BLOCK


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | COLON expression
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | /* empty */

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace

   21 fragments_or_function_declaration: fragments
   22                                  | function_declaration

   23 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration

   27 pipeline: instruction
   28         | pipeline PIPE instruction

   29 instruction: command

   30 key_values: key_name
   31           | key_name EQUALS fragment
   32           | key_values COMMA key_name EQUALS fragment
   33           | key_values COMMA key_name

   34 key_name: fragment_or_variable
   35         | QUESTION_MARK

   36 command: arguments

   37 arguments: fragments
   38          | arguments WHITESPACE fragments

   39 fragments: fragment
   40          | fragments fragment
   41          | fragments keyword_as_string

   42 fragment: fragment_or_variable
   43         | number
   44         | MINUS
   45         | PHP
   46         | SINGLE_QUOTED
   47         | DOUBLE_QUOTED
   48         | DOLLAR VARIABLE
   49         | DOLLAR NUMBER
   50         | DOLLAR QUESTION_MARK
   51         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | BEGIN_PAREN expression END_PAREN
   54         | array_decl

   55 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | AT BEGIN_PAREN array_def END_PAREN
   57           | AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

   58 array_def: array_element
   59          | array_def COMMA array_element

   60 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | optional_whitespace fragment optional_whitespace

   62 number: NUMBER

   63 keyword_as_string: KEYWORD_IF
   64                  | KEYWORD_ELSE
   65                  | KEYWORD_WHILE
   66                  | KEYWORD_FOR
   67                  | KEYWORD_FOREACH
   68                  | KEYWORD_DO
   69                  | KEYWORD_BREAK
   70                  | KEYWORD_CONTINUE
   71                  | KEYWORD_AS

   72 fragment_or_variable: FRAGMENT
   73                     | VARIABLE

   74 expression: fragment
   75           | expression ACCESS expression
   76           | expression BEGIN_PAREN END_PAREN
   77           | expression BEGIN_PAREN comma_arguments END_PAREN
   78           | expression DIVIDE expression
   79           | expression MULTIPLY expression
   80           | expression ADD expression
   81           | expression WHITESPACE MINUS expression
   82           | function_declaration

   83 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

   84 comma_arguments: fragments
   85                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 38 81
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 28
PERCENT (263)
DOLLAR (264) 19 20 23 24 48 49 50 51 52
BEGIN_PAREN (265) 51 52 53 55 56 57 76 77 83
END_PAREN (266) 51 52 53 55 56 57 76 77 83
EQUALS (267) 23 24 25 26 31 32
BEGIN_SQUARE (268) 26 52
END_SQUARE (269) 26 52
BEGIN_BRACE (270) 13 14 15 16 17 83
END_BRACE (271) 13 14 15 16 17 83
COMMA (272) 32 33 57 59 85
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 25 26 75
MAP (278) 19 60 83
MINUS (279) 44 81
ADD (280) 80
MULTIPLY (281) 79
DIVIDE (282) 78
AT (283) 55 56 57
COLON (284) 12 24 25 26
UNTERMINATED_LEXING_BLOCK (285)
KEYWORD_WHILE (286) 15 16 65
KEYWORD_DO (287) 16 68
KEYWORD_FOR (288) 66
KEYWORD_FOREACH (289) 17 67
KEYWORD_BREAK (290) 69
KEYWORD_CONTINUE (291) 70
KEYWORD_IF (292) 13 14 63
KEYWORD_ELSE (293) 13 64
KEYWORD_AS (294) 17 71
NUMBER (295) 49 62
FRAGMENT (296) 72
SINGLE_QUOTED (297) 46
DOUBLE_QUOTED (298) 47
VARIABLE (299) 19 20 23 24 48 73
QUESTION_MARK (300) 35 50
PHP (301) 45


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
root (48)
    on left: 1, on right: 0
statements (49)
    on left: 2 3, on right: 1 3 13 14 15 16 17 83
terminator (50)
    on left: 4 5, on right: 3
optional_whitespace (51)
    on left: 6 7 8, on right: 13 14 15 16 17 19 20 55 57 60 61
statement (52)
    on left: 9 10 11 12 13 14 15 16 17 18, on right: 2 3
mapping (53)
    on left: 19 20, on right: 17
fragments_or_function_declaration (54)
    on left: 21 22, on right: 23 24 25 26
assignment (55)
    on left: 23 24 25 26, on right: 11
pipeline (56)
    on left: 27 28, on right: 9 10 28 51 52
instruction (57)
    on left: 29, on right: 27 28
key_values (58)
    on left: 30 31 32 33, on right: 32 33 52
key_name (59)
    on left: 34 35, on right: 30 31 32 33
command (60)
    on left: 36, on right: 29
arguments (61)
    on left: 37 38, on right: 36 38
fragments (62)
    on left: 39 40 41, on right: 21 37 38 40 41 84 85
fragment (63)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54, on right: 13 14
    15 16 17 31 32 39 40 60 61 74
array_decl (64)
    on left: 55 56 57, on right: 54
array_def (65)
    on left: 58 59, on right: 56 57 59
array_element (66)
    on left: 60 61, on right: 58 59
number (67)
    on left: 62, on right: 43
keyword_as_string (68)
    on left: 63 64 65 66 67 68 69 70 71, on right: 41
fragment_or_variable (69)
    on left: 72 73, on right: 34 42
expression (70)
    on left: 74 75 76 77 78 79 80 81 82, on right: 12 25 26 53 75 76
    77 78 79 80 81
function_declaration (71)
    on left: 83, on right: 22 82
comma_arguments (72)
    on left: 84 85, on right: 77 85


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    root                  go to state 16
    statements            go to state 17
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 1

   23 assignment: DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   48 fragment: DOLLAR . VARIABLE
   49         | DOLLAR . NUMBER
   50         | DOLLAR . QUESTION_MARK
   51         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 32
    QUESTION_MARK  shift, and go to state 33


State 2

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   53         | BEGIN_PAREN . expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 37
    function_declaration  go to state 38


State 3

   44 fragment: MINUS .

    $default  reduce using rule 44 (fragment)


State 4

   55 array_decl: AT . BEGIN_PAREN optional_whitespace END_PAREN
   56           | AT . BEGIN_PAREN array_def END_PAREN
   57           | AT . BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

    BEGIN_PAREN  shift, and go to state 39


State 5

   12 statement: COLON . expression
   24 assignment: COLON . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | COLON . expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | COLON . expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 40
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 41
    function_declaration  go to state 38


State 6

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 44


State 7

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 45


State 8

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH . optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 46


State 9

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 47


State 10

   62 number: NUMBER .

    $default  reduce using rule 62 (number)


State 11

   72 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 72 (fragment_or_variable)


State 12

   46 fragment: SINGLE_QUOTED .

    $default  reduce using rule 46 (fragment)


State 13

   47 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 47 (fragment)


State 14

   73 fragment_or_variable: VARIABLE .

    $default  reduce using rule 73 (fragment_or_variable)


State 15

   45 fragment: PHP .

    $default  reduce using rule 45 (fragment)


State 16

    0 $accept: root . $end

    $end  shift, and go to state 48


State 17

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 49
    SEMICOLON            shift, and go to state 50

    $default  reduce using rule 1 (root)

    terminator  go to state 51


State 18

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 19

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 20

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   28 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 52
    AMPERSAND  shift, and go to state 53

    $default  reduce using rule 10 (statement)


State 21

   27 pipeline: instruction .

    $default  reduce using rule 27 (pipeline)


State 22

   29 instruction: command .

    $default  reduce using rule 29 (instruction)


State 23

   36 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   38 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 54

    $default  reduce using rule 36 (command)


State 24

   37 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   40 fragments: fragments . fragment
   41          | fragments . keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   63 keyword_as_string: . KEYWORD_IF
   64                  | . KEYWORD_ELSE
   65                  | . KEYWORD_WHILE
   66                  | . KEYWORD_FOR
   67                  | . KEYWORD_FOREACH
   68                  | . KEYWORD_DO
   69                  | . KEYWORD_BREAK
   70                  | . KEYWORD_CONTINUE
   71                  | . KEYWORD_AS
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 55
    KEYWORD_DO        shift, and go to state 56
    KEYWORD_FOR       shift, and go to state 57
    KEYWORD_FOREACH   shift, and go to state 58
    KEYWORD_BREAK     shift, and go to state 59
    KEYWORD_CONTINUE  shift, and go to state 60
    KEYWORD_IF        shift, and go to state 61
    KEYWORD_ELSE      shift, and go to state 62
    KEYWORD_AS        shift, and go to state 63
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 37 (arguments)

    fragment              go to state 64
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 65
    fragment_or_variable  go to state 28


State 25

   39 fragments: fragment .

    $default  reduce using rule 39 (fragments)


State 26

   54 fragment: array_decl .

    $default  reduce using rule 54 (fragment)


State 27

   43 fragment: number .

    $default  reduce using rule 43 (fragment)


State 28

   42 fragment: fragment_or_variable .

    $default  reduce using rule 42 (fragment)


State 29

   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   51         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 66
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 30

   30 key_values: . key_name
   31           | . key_name EQUALS fragment
   32           | . key_values COMMA key_name EQUALS fragment
   33           | . key_values COMMA key_name
   34 key_name: . fragment_or_variable
   35         | . QUESTION_MARK
   52 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 67

    key_values            go to state 68
    key_name              go to state 69
    fragment_or_variable  go to state 70


State 31

   49 fragment: DOLLAR NUMBER .

    $default  reduce using rule 49 (fragment)


State 32

   23 assignment: DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   48 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, AT, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_AS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 71

    $default  reduce using rule 48 (fragment)


State 33

   50 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 50 (fragment)


State 34

   48 fragment: DOLLAR . VARIABLE
   49         | DOLLAR . NUMBER
   50         | DOLLAR . QUESTION_MARK
   51         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 72
    QUESTION_MARK  shift, and go to state 33


State 35

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   53         | BEGIN_PAREN . expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE
   83                     | BEGIN_PAREN . END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    END_PAREN      shift, and go to state 73
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 37
    function_declaration  go to state 38


State 36

   74 expression: fragment .

    $default  reduce using rule 74 (expression)


State 37

   53 fragment: BEGIN_PAREN expression . END_PAREN
   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 74
    BEGIN_PAREN  shift, and go to state 75
    END_PAREN    shift, and go to state 76
    ACCESS       shift, and go to state 77
    ADD          shift, and go to state 78
    MULTIPLY     shift, and go to state 79
    DIVIDE       shift, and go to state 80


State 38

   82 expression: function_declaration .

    $default  reduce using rule 82 (expression)


State 39

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   55 array_decl: AT BEGIN_PAREN . optional_whitespace END_PAREN
   56           | AT BEGIN_PAREN . array_def END_PAREN
   57           | AT BEGIN_PAREN . array_def COMMA optional_whitespace END_PAREN
   58 array_def: . array_element
   59          | . array_def COMMA array_element
   60 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 81
    array_def            go to state 82
    array_element        go to state 83


State 40

   24 assignment: COLON DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   48 fragment: DOLLAR . VARIABLE
   49         | DOLLAR . NUMBER
   50         | DOLLAR . QUESTION_MARK
   51         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 29
    BEGIN_SQUARE   shift, and go to state 30
    NUMBER         shift, and go to state 31
    VARIABLE       shift, and go to state 84
    QUESTION_MARK  shift, and go to state 33


State 41

   12 statement: COLON expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   25 assignment: COLON expression . ACCESS expression EQUALS fragments_or_function_declaration
   26           | COLON expression . ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 74
    BEGIN_PAREN  shift, and go to state 75
    ACCESS       shift, and go to state 85
    ADD          shift, and go to state 78
    MULTIPLY     shift, and go to state 79
    DIVIDE       shift, and go to state 80

    $default  reduce using rule 12 (statement)


State 42

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 43

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 44

   15 statement: KEYWORD_WHILE optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 86
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 45

   16 statement: KEYWORD_DO optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    BEGIN_BRACE  shift, and go to state 87


State 46

   17 statement: KEYWORD_FOREACH optional_whitespace . fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 88
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 47

   13 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 89
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 48

    0 $accept: root $end .

    $default  accept


State 49

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 50

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 51

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statement             go to state 90
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 52

   28 pipeline: pipeline PIPE . instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    instruction           go to state 91
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 53

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 54

   38 arguments: arguments WHITESPACE . fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 92
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 55

   65 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 65 (keyword_as_string)


State 56

   68 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 68 (keyword_as_string)


State 57

   66 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 66 (keyword_as_string)


State 58

   67 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 67 (keyword_as_string)


State 59

   69 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 69 (keyword_as_string)


State 60

   70 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 70 (keyword_as_string)


State 61

   63 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 63 (keyword_as_string)


State 62

   64 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 64 (keyword_as_string)


State 63

   71 keyword_as_string: KEYWORD_AS .

    $default  reduce using rule 71 (keyword_as_string)


State 64

   40 fragments: fragments fragment .

    $default  reduce using rule 40 (fragments)


State 65

   41 fragments: fragments keyword_as_string .

    $default  reduce using rule 41 (fragments)


State 66

   28 pipeline: pipeline . PIPE instruction
   51 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 52
    END_PAREN  shift, and go to state 93


State 67

   35 key_name: QUESTION_MARK .

    $default  reduce using rule 35 (key_name)


State 68

   32 key_values: key_values . COMMA key_name EQUALS fragment
   33           | key_values . COMMA key_name
   52 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 94
    COMMA       shift, and go to state 95


State 69

   30 key_values: key_name .  [END_SQUARE, COMMA]
   31           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 96

    $default  reduce using rule 30 (key_values)


State 70

   34 key_name: fragment_or_variable .

    $default  reduce using rule 34 (key_name)


State 71

   21 fragments_or_function_declaration: . fragments
   22                                  | . function_declaration
   23 assignment: DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments_or_function_declaration  go to state 97
    fragments                          go to state 98
    fragment                           go to state 25
    array_decl                         go to state 26
    number                             go to state 27
    fragment_or_variable               go to state 28
    function_declaration               go to state 99


State 72

   48 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 48 (fragment)


State 73

   83 function_declaration: BEGIN_PAREN END_PAREN . MAP BEGIN_BRACE statements END_BRACE

    MAP  shift, and go to state 100


State 74

   81 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 101


State 75

   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   76 expression: expression BEGIN_PAREN . END_PAREN
   77           | expression BEGIN_PAREN . comma_arguments END_PAREN
   84 comma_arguments: . fragments
   85                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 102
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 103
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    comma_arguments       go to state 104


State 76

   53 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 53 (fragment)


State 77

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   75           | expression ACCESS . expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 105
    function_declaration  go to state 38


State 78

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   80           | expression ADD . expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 106
    function_declaration  go to state 38


State 79

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   79           | expression MULTIPLY . expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 107
    function_declaration  go to state 38


State 80

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   78           | expression DIVIDE . expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 108
    function_declaration  go to state 38


State 81

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   55           | AT BEGIN_PAREN optional_whitespace . END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | optional_whitespace . fragment optional_whitespace
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 109
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 110
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 82

   56 array_decl: AT BEGIN_PAREN array_def . END_PAREN
   57           | AT BEGIN_PAREN array_def . COMMA optional_whitespace END_PAREN
   59 array_def: array_def . COMMA array_element

    END_PAREN  shift, and go to state 111
    COMMA      shift, and go to state 112


State 83

   58 array_def: array_element .

    $default  reduce using rule 58 (array_def)


State 84

   24 assignment: COLON DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   48 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]

    EQUALS  shift, and go to state 113

    $default  reduce using rule 48 (fragment)


State 85

   25 assignment: COLON expression ACCESS . expression EQUALS fragments_or_function_declaration
   26           | COLON expression ACCESS . BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   75           | expression ACCESS . expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    BEGIN_SQUARE   shift, and go to state 114
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 115
    function_declaration  go to state 38


State 86

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 116


State 87

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 117
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 88

    6 optional_whitespace: .  [KEYWORD_AS]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment . optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 118


State 89

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 119


State 90

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 91

   28 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 28 (pipeline)


State 92

   38 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   40 fragments: fragments . fragment
   41          | fragments . keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   63 keyword_as_string: . KEYWORD_IF
   64                  | . KEYWORD_ELSE
   65                  | . KEYWORD_WHILE
   66                  | . KEYWORD_FOR
   67                  | . KEYWORD_FOREACH
   68                  | . KEYWORD_DO
   69                  | . KEYWORD_BREAK
   70                  | . KEYWORD_CONTINUE
   71                  | . KEYWORD_AS
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 55
    KEYWORD_DO        shift, and go to state 56
    KEYWORD_FOR       shift, and go to state 57
    KEYWORD_FOREACH   shift, and go to state 58
    KEYWORD_BREAK     shift, and go to state 59
    KEYWORD_CONTINUE  shift, and go to state 60
    KEYWORD_IF        shift, and go to state 61
    KEYWORD_ELSE      shift, and go to state 62
    KEYWORD_AS        shift, and go to state 63
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 38 (arguments)

    fragment              go to state 64
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 65
    fragment_or_variable  go to state 28


State 93

   51 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 51 (fragment)


State 94

   52 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 120


State 95

   32 key_values: key_values COMMA . key_name EQUALS fragment
   33           | key_values COMMA . key_name
   34 key_name: . fragment_or_variable
   35         | . QUESTION_MARK
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    FRAGMENT       shift, and go to state 11
    VARIABLE       shift, and go to state 14
    QUESTION_MARK  shift, and go to state 67

    key_name              go to state 121
    fragment_or_variable  go to state 70


State 96

   31 key_values: key_name EQUALS . fragment
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 122
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 97

   23 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 23 (assignment)


State 98

   21 fragments_or_function_declaration: fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   40 fragments: fragments . fragment
   41          | fragments . keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   63 keyword_as_string: . KEYWORD_IF
   64                  | . KEYWORD_ELSE
   65                  | . KEYWORD_WHILE
   66                  | . KEYWORD_FOR
   67                  | . KEYWORD_FOREACH
   68                  | . KEYWORD_DO
   69                  | . KEYWORD_BREAK
   70                  | . KEYWORD_CONTINUE
   71                  | . KEYWORD_AS
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 55
    KEYWORD_DO        shift, and go to state 56
    KEYWORD_FOR       shift, and go to state 57
    KEYWORD_FOREACH   shift, and go to state 58
    KEYWORD_BREAK     shift, and go to state 59
    KEYWORD_CONTINUE  shift, and go to state 60
    KEYWORD_IF        shift, and go to state 61
    KEYWORD_ELSE      shift, and go to state 62
    KEYWORD_AS        shift, and go to state 63
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 21 (fragments_or_function_declaration)

    fragment              go to state 64
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 65
    fragment_or_variable  go to state 28


State 99

   22 fragments_or_function_declaration: function_declaration .

    $default  reduce using rule 22 (fragments_or_function_declaration)


State 100

   83 function_declaration: BEGIN_PAREN END_PAREN MAP . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 123


State 101

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   74 expression: . fragment
   75           | . expression ACCESS expression
   76           | . expression BEGIN_PAREN END_PAREN
   77           | . expression BEGIN_PAREN comma_arguments END_PAREN
   78           | . expression DIVIDE expression
   79           | . expression MULTIPLY expression
   80           | . expression ADD expression
   81           | . expression WHITESPACE MINUS expression
   81           | expression WHITESPACE MINUS . expression
   82           | . function_declaration
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 36
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28
    expression            go to state 124
    function_declaration  go to state 38


State 102

   76 expression: expression BEGIN_PAREN END_PAREN .

    $default  reduce using rule 76 (expression)


State 103

   40 fragments: fragments . fragment
   41          | fragments . keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   63 keyword_as_string: . KEYWORD_IF
   64                  | . KEYWORD_ELSE
   65                  | . KEYWORD_WHILE
   66                  | . KEYWORD_FOR
   67                  | . KEYWORD_FOREACH
   68                  | . KEYWORD_DO
   69                  | . KEYWORD_BREAK
   70                  | . KEYWORD_CONTINUE
   71                  | . KEYWORD_AS
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   84 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 55
    KEYWORD_DO        shift, and go to state 56
    KEYWORD_FOR       shift, and go to state 57
    KEYWORD_FOREACH   shift, and go to state 58
    KEYWORD_BREAK     shift, and go to state 59
    KEYWORD_CONTINUE  shift, and go to state 60
    KEYWORD_IF        shift, and go to state 61
    KEYWORD_ELSE      shift, and go to state 62
    KEYWORD_AS        shift, and go to state 63
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 84 (comma_arguments)

    fragment              go to state 64
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 65
    fragment_or_variable  go to state 28


State 104

   77 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   85 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 125
    COMMA      shift, and go to state 126


State 105

   75 expression: expression . ACCESS expression
   75           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 75 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 75 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 75 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 75 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 75 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 106

   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   80           | expression ADD expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]
   81           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 75
    ACCESS       shift, and go to state 77
    MULTIPLY     shift, and go to state 79
    DIVIDE       shift, and go to state 80

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 80 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 80 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 80 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 80 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 80 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 107

   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   79           | expression MULTIPLY expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 75
    ACCESS       shift, and go to state 77

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 79 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 79 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 79 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 79 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 79 and token DIVIDE resolved as reduce (%left DIVIDE).


State 108

   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   78           | expression DIVIDE expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 75
    ACCESS       shift, and go to state 77

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 78 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 78 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 78 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 78 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 78 and token DIVIDE resolved as reduce (%left DIVIDE).


State 109

   55 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN .

    $default  reduce using rule 55 (array_decl)


State 110

    6 optional_whitespace: .  [END_PAREN, COMMA, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   60 array_element: optional_whitespace fragment . optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 127


State 111

   56 array_decl: AT BEGIN_PAREN array_def END_PAREN .

    $default  reduce using rule 56 (array_decl)


State 112

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   57 array_decl: AT BEGIN_PAREN array_def COMMA . optional_whitespace END_PAREN
   59 array_def: array_def COMMA . array_element
   60 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 128
    array_element        go to state 129


State 113

   21 fragments_or_function_declaration: . fragments
   22                                  | . function_declaration
   24 assignment: COLON DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments_or_function_declaration  go to state 130
    fragments                          go to state 98
    fragment                           go to state 25
    array_decl                         go to state 26
    number                             go to state 27
    fragment_or_variable               go to state 28
    function_declaration               go to state 99


State 114

   26 assignment: COLON expression ACCESS BEGIN_SQUARE . END_SQUARE EQUALS fragments_or_function_declaration

    END_SQUARE  shift, and go to state 131


State 115

   25 assignment: COLON expression ACCESS expression . EQUALS fragments_or_function_declaration
   75 expression: expression . ACCESS expression
   75           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression

    EQUALS  shift, and go to state 132

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 75 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 75 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 75 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 75 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 75 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 116

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 133


State 117

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_WHILE optional_whitespace fragment

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 134
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 118

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace . KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    KEYWORD_AS  shift, and go to state 135


State 119

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 136


State 120

   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   52         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    pipeline              go to state 137
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 121

   32 key_values: key_values COMMA key_name . EQUALS fragment
   33           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 138

    $default  reduce using rule 33 (key_values)


State 122

   31 key_values: key_name EQUALS fragment .

    $default  reduce using rule 31 (key_values)


State 123

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   83 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE . statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 139
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 124

   75 expression: expression . ACCESS expression
   76           | expression . BEGIN_PAREN END_PAREN
   77           | expression . BEGIN_PAREN comma_arguments END_PAREN
   78           | expression . DIVIDE expression
   79           | expression . MULTIPLY expression
   80           | expression . ADD expression
   81           | expression . WHITESPACE MINUS expression
   81           | expression WHITESPACE MINUS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]

    BEGIN_PAREN  shift, and go to state 75
    ACCESS       shift, and go to state 77
    MULTIPLY     shift, and go to state 79
    DIVIDE       shift, and go to state 80

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 81 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 81 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 81 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 81 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 81 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 125

   77 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 77 (expression)


State 126

   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   85 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments             go to state 140
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 127

   60 array_element: optional_whitespace fragment optional_whitespace . MAP optional_whitespace fragment optional_whitespace
   61              | optional_whitespace fragment optional_whitespace .  [END_PAREN, COMMA]

    MAP  shift, and go to state 141

    $default  reduce using rule 61 (array_element)


State 128

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   57           | AT BEGIN_PAREN array_def COMMA optional_whitespace . END_PAREN
   60 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   61              | optional_whitespace . fragment optional_whitespace
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 142
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 110
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 129

   59 array_def: array_def COMMA array_element .

    $default  reduce using rule 59 (array_def)


State 130

   24 assignment: COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 24 (assignment)


State 131

   26 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE . EQUALS fragments_or_function_declaration

    EQUALS  shift, and go to state 143


State 132

   21 fragments_or_function_declaration: . fragments
   22                                  | . function_declaration
   25 assignment: COLON expression ACCESS expression EQUALS . fragments_or_function_declaration
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments_or_function_declaration  go to state 144
    fragments                          go to state 98
    fragment                           go to state 25
    array_decl                         go to state 26
    number                             go to state 27
    fragment_or_variable               go to state 28
    function_declaration               go to state 99


State 133

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 145
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 134

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_WHILE optional_whitespace fragment

    KEYWORD_WHILE  shift, and go to state 146


State 135

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS . optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 147


State 136

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 148
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 137

   28 pipeline: pipeline . PIPE instruction
   52 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 52
    END_PAREN  shift, and go to state 149


State 138

   32 key_values: key_values COMMA key_name EQUALS . fragment
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 150
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 139

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   83 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 151
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 140

   40 fragments: fragments . fragment
   41          | fragments . keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   63 keyword_as_string: . KEYWORD_IF
   64                  | . KEYWORD_ELSE
   65                  | . KEYWORD_WHILE
   66                  | . KEYWORD_FOR
   67                  | . KEYWORD_FOREACH
   68                  | . KEYWORD_DO
   69                  | . KEYWORD_BREAK
   70                  | . KEYWORD_CONTINUE
   71                  | . KEYWORD_AS
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   85 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 34
    BEGIN_PAREN       shift, and go to state 2
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 55
    KEYWORD_DO        shift, and go to state 56
    KEYWORD_FOR       shift, and go to state 57
    KEYWORD_FOREACH   shift, and go to state 58
    KEYWORD_BREAK     shift, and go to state 59
    KEYWORD_CONTINUE  shift, and go to state 60
    KEYWORD_IF        shift, and go to state 61
    KEYWORD_ELSE      shift, and go to state 62
    KEYWORD_AS        shift, and go to state 63
    NUMBER            shift, and go to state 10
    FRAGMENT          shift, and go to state 11
    SINGLE_QUOTED     shift, and go to state 12
    DOUBLE_QUOTED     shift, and go to state 13
    VARIABLE          shift, and go to state 14
    PHP               shift, and go to state 15

    $default  reduce using rule 85 (comma_arguments)

    fragment              go to state 64
    array_decl            go to state 26
    number                go to state 27
    keyword_as_string     go to state 65
    fragment_or_variable  go to state 28


State 141

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   60 array_element: optional_whitespace fragment optional_whitespace MAP . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 152


State 142

   57 array_decl: AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN .

    $default  reduce using rule 57 (array_decl)


State 143

   21 fragments_or_function_declaration: . fragments
   22                                  | . function_declaration
   26 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS . fragments_or_function_declaration
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE
   83 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 35
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragments_or_function_declaration  go to state 153
    fragments                          go to state 98
    fragment                           go to state 25
    array_decl                         go to state 26
    number                             go to state 27
    fragment_or_variable               go to state 28
    function_declaration               go to state 99


State 144

   25 assignment: COLON expression ACCESS expression EQUALS fragments_or_function_declaration .

    $default  reduce using rule 25 (assignment)


State 145

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 154
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 146

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE . optional_whitespace fragment

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 155


State 147

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace . mapping BEGIN_BRACE statements END_BRACE
   19 mapping: . DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 156

    mapping  go to state 157


State 148

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 158
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 149

   52 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 52 (fragment)


State 150

   32 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 32 (key_values)


State 151

   83 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 83 (function_declaration)


State 152

   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   60 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace . fragment optional_whitespace
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 159
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 153

   26 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 26 (assignment)


State 154

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 15 (statement)


State 155

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace . fragment
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR         shift, and go to state 34
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 10
    FRAGMENT       shift, and go to state 11
    SINGLE_QUOTED  shift, and go to state 12
    DOUBLE_QUOTED  shift, and go to state 13
    VARIABLE       shift, and go to state 14
    PHP            shift, and go to state 15

    fragment              go to state 160
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 156

   19 mapping: DOLLAR . VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 161


State 157

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 162


State 158

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 163

    $default  reduce using rule 14 (statement)


State 159

    6 optional_whitespace: .  [END_PAREN, COMMA]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   60 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 164


State 160

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment .

    $default  reduce using rule 16 (statement)


State 161

    6 optional_whitespace: .  [BEGIN_BRACE, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE . optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 165


State 162

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE . statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 166
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 163

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 167


State 164

   60 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace .

    $default  reduce using rule 60 (array_element)


State 165

   19 mapping: DOLLAR VARIABLE optional_whitespace . MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   20        | DOLLAR VARIABLE optional_whitespace .  [BEGIN_BRACE]

    MAP  shift, and go to state 168

    $default  reduce using rule 20 (mapping)


State 166

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 169
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 167

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   23 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   24           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   27 pipeline: . instruction
   28         | . pipeline PIPE instruction
   29 instruction: . command
   36 command: . arguments
   37 arguments: . fragments
   38          | . arguments WHITESPACE fragments
   39 fragments: . fragment
   40          | . fragments fragment
   41          | . fragments keyword_as_string
   42 fragment: . fragment_or_variable
   43         | . number
   44         | . MINUS
   45         | . PHP
   46         | . SINGLE_QUOTED
   47         | . DOUBLE_QUOTED
   48         | . DOLLAR VARIABLE
   49         | . DOLLAR NUMBER
   50         | . DOLLAR QUESTION_MARK
   51         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   52         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   53         | . BEGIN_PAREN expression END_PAREN
   54         | . array_decl
   55 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   56           | . AT BEGIN_PAREN array_def END_PAREN
   57           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 number: . NUMBER
   72 fragment_or_variable: . FRAGMENT
   73                     | . VARIABLE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    NUMBER           shift, and go to state 10
    FRAGMENT         shift, and go to state 11
    SINGLE_QUOTED    shift, and go to state 12
    DOUBLE_QUOTED    shift, and go to state 13
    VARIABLE         shift, and go to state 14
    PHP              shift, and go to state 15

    $default  reduce using rule 18 (statement)

    statements            go to state 170
    statement             go to state 18
    assignment            go to state 19
    pipeline              go to state 20
    instruction           go to state 21
    command               go to state 22
    arguments             go to state 23
    fragments             go to state 24
    fragment              go to state 25
    array_decl            go to state 26
    number                go to state 27
    fragment_or_variable  go to state 28


State 168

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP . optional_whitespace DOLLAR VARIABLE optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 171


State 169

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 17 (statement)


State 170

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 49
    END_BRACE            shift, and go to state 172
    SEMICOLON            shift, and go to state 50

    terminator  go to state 51


State 171

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 173


State 172

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 13 (statement)


State 173

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 174


State 174

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 42
    TERMINATING_NEWLINE  shift, and go to state 43

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 175


State 175

   19 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace .

    $default  reduce using rule 19 (mapping)
